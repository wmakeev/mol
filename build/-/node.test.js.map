{"version":3,"sources":["../../mol.jam.js","mol.ts","../../test/test.node.ts","../../test/test.ts","../../assert/assert.test.ts","../../assert/assert.ts","../../func/func.ts","../../deprecated/deprecated.ts","../../log/log.node.ts","../../object/object.test.ts","../../object/object.ts","../../defer/defer.ts","../../state/stack/stack.ts","../../atom/atom.test.ts","../../atom/atom.ts","../../mem/mem.test.ts","../../mem/mem.ts","../../const/const.test.ts","../../const/const.ts","../../../node/node.node.ts","../../file/file.node.ts","../../typeof/typeof.test.ts","../../typeof/typeof.ts","../../tree/tree.test.ts","../../tree/tree.ts","../../window/window.node.ts","../../dom/context/context.node.ts","../../dom/context/context.ts","../../dom/make/make.test.ts","../../dom/make/make.ts","../../dom/render/render.ts","../../view/view.test.ts","../../view/view.ts","../../view/selection/selection.ts","../../state/local/local.test.ts","../../state/local/local.ts","../../locale/locale.ts","../../view/tree2ts/tree2ts.ts","../../graph/graph.test.ts","../../graph/graph.ts","../../exec/exec.node.ts","../build.node.ts","../../server/server.node.ts","../server/server.node.ts","../start/start.node.ts"],"names":[],"mappings":"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","file":"node.test.js","sourcesContent":[null,"declare class WeakMap< Key , Value > {\n\tdelete( key : Key ) : boolean\n\tget( key : Key ) : Value\n\thas( key : Key ) : boolean\n\tset( key : Key , value : Value ) : Map< Key , Value >\n}\n\ndeclare class Map< Key , Value > {\n\tclear(): void\n\tdelete( key : Key ) : boolean\n\tforEach< Context = any >( handler : ( this : Context , value : Value , key : Key , map : Map< Key , Value > ) => void , context? : Context ) : void\n\tget( key : Key ) : Value\n\thas( key : Key ) : boolean\n\tset( key : Key , value : Value ) : Map< Key , Value >\n\tsize : number\n}\n\ndeclare class Set< Value > {\n\tadd( value : Value ) : Set< Value >\n\tclear() : void\n\tdelete( value : Value ) : boolean\n\tforEach< Context = any >( handler : ( this : Context , value : Value , key : Value , map : Set< Value > ) => void , context? : Context ) : void\n\thas( value : Value ) : boolean\n\tsize : number\n}\n","/// Autostart tests after all scripts load\nsetImmediate( () => {\n\t$.$mol_test_run()\n} )\n","namespace $ {\n\t\n\texport function $mol_test( set : { [ name : string ] : string | ( ()=> void ) } ) {\n\t\tfor( let name in set ) $mol_test_all.push( new $mol_test_case( set[ name ] ) )\n\t}\n\t\n\texport var $mol_test_all : $mol_test_case[] = []\n\t\n\texport var $mol_test_run = () => {\n\t\tfor( var test of $mol_test_all ) {\n\t\t\ttest.run()\n\t\t}\n\t}\n\t\n\texport class $mol_test_case {\n\t\t\n\t\tcode : ()=> void\n\t\t\n\t\tconstructor( code : string | ( ()=> void ) ) {\n\t\t\tif( typeof code === 'string' ) {\n\t\t\t\tthis.code = <any> new Function( code )\n\t\t\t} else {\n\t\t\t\tthis.code = code\n\t\t\t}\n\t\t}\n\t\t\n\t\trun() {\n\t\t\tthis.code()\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'must be unique'() {\n\t\t\t$mol_assert_unique( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\tthrow new Error( `Not true (${value})` )\n\t}\n\t\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\tthrow new Error( `Not false (${value})` )\n\t}\n\t\n\texport function $mol_assert_fail( handler : ()=> any , ErrorRight? : any ) {\n\t\ttry {\n\t\t\thandler()\n\t\t} catch( error ) {\n\t\t\tif( ErrorRight ) $mol_assert_ok( error instanceof ErrorRight )\n\t\t\treturn error\n\t\t}\n\t\tthrow new Error( 'Not failed' )\n\t}\n\t\n\texport function $mol_assert_equal< Value >( a : Value , b : Value ) {\n\t\tif( a === b ) return\n\t\tthrow new Error( `Not equal (${a},${b})` )\n\t}\n\t\n\texport function $mol_assert_unique< Value >( a : Value , b : Value ) {\n\t\tif( a !== b ) return\n\t\tthrow new Error( `Not unique (${a},${b})` )\n\t}\n\t\n}\n","interface Function {\n\tname : string\n}\n\nnamespace $ {\n\t\n\texport var $mol_func_name_dict = new WeakMap< Function , string >()\n\n\texport function $mol_func_name( func : Function ) : string {\n\t\tif( func.name ) return func.name\n\t\t\n\t\tlet name = $mol_func_name_dict.get( func )\n\t\tif( name != null ) return name\n\t\t\n\t\tname = Function.prototype.toString.call( func ).match( /^function ([a-z0-9_$]*)/ )[ 1 ]\n\t\t$mol_func_name_dict.set( func , name )\n\t\t\n\t\treturn name\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_deprecated< Host , Method extends Function >( message : string ) {\n\t\treturn function(\n\t\t\thost : Host ,\n\t\t\tfield : string ,\n\t\t\tdescr : TypedPropertyDescriptor< Method >\n\t\t) {\n\t\t\tconst value = descr.value\n\t\t\tdescr.value = <any> function $mol_deprecated_wrapper() {\n\t\t\t\tconsole.warn( `${ host.constructor }::${ field } is deprecated. ${ message }` )\n\t\t\t\treturn value.apply( this , arguments )\n\t\t\t}\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_log( path : string , values : any[] ) {\n\t\t\n\t\tvar filter = $mol_log.filter()\n\t\tif( filter == null ) return\n\t\tif( path.indexOf( filter ) === -1 ) return\n\t\t\n\t\tvar time = new Date().toLocaleTimeString()\n\t\tconsole.log( time , path , values )\n\t}\n\t\n\texport namespace $mol_log {\n\t\t\n\t\tvar _filter : string\n\t\t\n\t\texport function filter( next? : string ) {\n\t\t\tif( next !== void 0 ) {\n\t\t\t\t_filter = next\n\t\t\t}\n\t\t\t\n\t\t\tif( _filter !== void 0 ) return _filter\n\t\t\t\n\t\t\treturn _filter = null\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\n\t\t'object path generation'() {\n\t\t\tvar x = new $mol_object\n\t\t\t\n\t\t\t$mol_assert_equal( `${ x }` , '' )\n\t\t\t\n\t\t\tx.object_field( 'foo()' )\n\t\t\t$mol_assert_equal( `${ x }` , '.foo()' )\n\t\t\t\n\t\t\tx.object_field( 'bar()' )\n\t\t\t$mol_assert_equal( `${ x }` , '.foo()' )\n\t\t} ,\n\t\n\t} )\n}\n","namespace $ {\n\t\n\t/// Common superclass that provides base functionality.\n\texport class $mol_object {\n\t\t\n\t\tClass() {\n\t\t\treturn this.constructor as any\n\t\t}\n\t\t\n\t\tstatic toString() : string {\n\t\t\treturn $mol_func_name( this )\n\t\t}\n\t\t\n\t\t/// Owner object.\n\t\tprivate 'object_owner()' : Object\n\t\t\n\t\tobject_owner( next? : Object ) {\n\t\t\tif( this[ 'object_owner()' ] ) return this[ 'object_owner()' ]\n\t\t\treturn this[ 'object_owner()' ] = next\n\t\t}\n\t\t\n\t\t/// Field in owner where this object is stored.\n\t\tprivate 'object_field()' : string\n\t\t\n\t\tobject_field( next? : string ) {\n\t\t\tif( this[ 'object_field()' ] ) return this[ 'object_field()' ] || ''\n\t\t\treturn this[ 'object_field()' ] = next\n\t\t}\n\t\t\n\t\t/// JS-path to this object from global scope. Can not be redefined.\n\t\ttoString() {\n\t\t\tvar path = ''\n\t\t\t\n\t\t\tvar owner = this.object_owner()\n\t\t\tif( owner ) path = owner.toString()\n\t\t\t\n\t\t\tvar field = this.object_field()\n\t\t\tif( field ) path += '.' + field\n\t\t\t\n\t\t\treturn path\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\t/// Generic factory than allows to override all fields\n\t\tpublic static make< Instance >( this : { new () : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\tconst instance = new this\n\t\t\tfor( let key in config ) instance[ key ] = config[ key ]\n\t\t\treturn instance\n\t\t}\n\t\t\n\t\t/// Helper to override fields in fluent style.\n\t\t@ $mol_deprecated( `Use $mol_object.make() instead.` )\n\t\tsetup( script : ( obj : this )=> void ) : this {\n\t\t\tscript( this )\n\t\t\treturn this\n\t\t}\n\t\t\n\t\t'destroyed()' = false\n\t\t\n\t\tdestroyed( next? : boolean ) {\n\t\t\tif( next === void 0 ) return this[ 'destroyed()' ]\n\t\t\tthis[ 'destroyed()' ] = next\n\t\t\tthis.log( [ '.destroyed()' , next ] )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tlog( values : any[] ) {\n\t\t\tif( $mol_log.filter() == null ) return\n\t\t\t$mol_log( this.toString() , values )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_defer extends $mol_object {\n\t\t\n\t\tconstructor( public run : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_defer.add( this )\n\t\t}\n\t\t\n\t\tdestroyed( next? : boolean ) {\n\t\t\tif( next ) $mol_defer.drop( this )\n\t\t\treturn super.destroyed( next )\n\t\t}\n\t\t\n\t\tstatic all : $mol_defer[] = []\n\t\tstatic timer = 0\n\t\t\n\t\tstatic scheduleNative : ( handler : ()=> void ) => number = ( typeof requestAnimationFrame == 'function' )\n\t\t\t? handler => requestAnimationFrame( handler )\n\t\t\t: handler => setTimeout( handler , 16 )\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.timer ) return\n\t\t\t\n\t\t\tthis.timer = this.scheduleNative(\n\t\t\t\t()=> {\n\t\t\t\t\tthis.timer = 0\n\t\t\t\t\tthis.run()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\tstatic unschedule() {\n\t\t\tif( !this.timer ) return\n\t\t\t\n\t\t\tcancelAnimationFrame( this.timer )\n\t\t\tthis.timer = 0\n\t\t}\n\t\t\n\t\tstatic add( defer : $mol_defer ) {\n\t\t\tthis.all.push( defer )\n\t\t\tthis.schedule()\n\t\t}\n\t\t\n\t\tstatic drop( defer : $mol_defer ) {\n\t\t\tvar index = this.all.indexOf( defer )\n\t\t\tif( index >= 0 ) this.all.splice( index , 1 )\n\t\t}\n\t\t\n\t\tstatic run() {\n\t\t\tif( this.all.length === 0 ) return\n\t\t\tthis.schedule()\n\t\t\tfor( var defer : $mol_defer ; defer = this.all.pop() ; ) defer.run()\n\t\t\t//this.unschedule()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/// Global storage of temporary state\n\texport var $mol_state_stack = new Map< string , any >()\n\t\n}\n","module $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'caching'() {\n\t\t\t\n\t\t\tlet random = new $mol_atom( 'random' , ()=> Math.random() )\n\t\t\t\n\t\t\t$mol_assert_equal( random.get() , random.get() )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'lazyness'() {\n\t\t\t\n\t\t\tlet value = 0\n\t\t\tlet prop = new $mol_atom( 'prop' , ()=> value = 1 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( value , 0 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'instant actualization'() {\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t\n\t\t\t$mol_assert_equal( target.get() , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'do not actualize when masters not changed'() {\n\t\t\t\n\t\t\tlet target_updates = 0 \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> Math.abs( source.get() ) )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\t++ target_updates\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\n\t\t\tsource.set( -1 )\n\t\t\ttarget.get()\n\t\t\t\n\t\t\t$mol_assert_equal( target_updates , 1 )\n\t\t\t\t\t\t\n\t\t} ,\n\t\t\n\t\t'obsolete atoms actualized in initial order'() {\n\t\t\t\n\t\t\tlet actualizations = '' \n\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> {\n\t\t\t\tactualizations += 'M'\n\t\t\t\treturn source.get()\n\t\t\t} )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> {\n\t\t\t\tactualizations += 'T'\n\t\t\t\tsource.get()\n\t\t\t\treturn middle.get()\n\t\t\t} )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( actualizations , 'TM' )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( actualizations , 'TMTM' )\n\t\t\t\t\t\t\n\t\t} ,\n\n\t\t'automatic deferred restart'() {\n\t\t\t\n\t\t\tlet targetValue : number\n\t\t\t\n\t\t\tlet source = new $mol_atom( 'source' , ( next? : number )=> next || 1 )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> targetValue = middle.get() + 1 )\n\t\t\t\n\t\t\ttarget.get()\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\tsource.set( 2 )\n\t\t\t$mol_assert_equal( targetValue , 3 )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_equal( targetValue , 4 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Right reactive change of source'() {\n\n\t\t\tlet targetValue : number\n\t\t\t\n\t\t\tlet test_counter = new $mol_atom<number>( 'test_counter' , next => {\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\ttest_counter.push( next || 1 )\n\t\t\t\t} )\n\t\t\t\tthrow new $mol_atom_wait\n\t\t\t} )\n\t\t\t\n\t\t\tlet slave = new $mol_atom<number>( 'slave' , next => test_counter.get() )\n\t\t\tslave.actualize()\n\t\t\t\n\t\t\tlet res : Error[] = []\n\t\t\tconst error = new Error( 'test error' )\n\t\t\t\n\t\t\tconst test_task = new $mol_atom( 'test_task' )\n\t\t\t.then( () => test_counter.get() + 1 )\n\t\t\t.then( next => test_counter.set( next ) )\n\t\t\t.then( next => {\n\t\t\t\ttest_counter.set( next + 1 )\n\t\t\t\tthrow error\n\t\t\t} )\n\t\t\t.catch( error => [ error ] )\n\t\t\t.then( next => res = next )\n\t\t\t\n\t\t\t$mol_defer.run()\n\t\t\t\n\t\t\t$mol_assert_equal( test_counter.get() , 3 )\n\t\t\t$mol_assert_equal( res[0] , error )\n\t\t\t\n\t\t\tslave.destroyed( true )\n\t\t} ,\n\t\t\n\t\t'error handling'() {\n\n\t\t\tlet source = new $mol_atom< number >( 'source' , ( next? : number )=> {\n\t\t\t\tconst error = new Error( 'Test error' )\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\tthrow error\n\t\t\t} )\n\t\t\tlet middle = new $mol_atom( 'middle' , ()=> source.get() + 1 )\n\t\t\tlet target = new $mol_atom( 'target' , ()=> middle.get() + 1 )\n\n\t\t\t$mol_assert_fail( ()=> target.get().valueOf() )\n\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","declare var Proxy : any\n\nnamespace $ {\n\t\n\texport enum $mol_atom_status {\n\t\tobsolete = 'obsolete' ,\n\t\tchecking = 'checking' ,\n\t\tpulling = 'pulling' ,\n\t\tactual = 'actual' ,\n\t}\n\t\n\texport class $mol_atom< Value = null > extends $mol_object {\n\t\t\n\t\tmasters : Set< $mol_atom<any> > | null = null\n\t\tslaves : Set< $mol_atom<any> > | null = null\n\t\t\n\t\tstatus = $mol_atom_status.obsolete\n\t\tautoFresh = true\n\t\t\n\t\thandler : ( next? : Value|Error , force? : $mol_atom_force )=> Value|void\n\t\thost : { [ key : string ] : any }\n\t\tfield : string\n\t\t\n\t\tconstructor(\n\t\t\thost : any ,\n\t\t\thandler : ( next? : Value , force? : $mol_atom_force )=> Value|void = ()=> undefined,\n\t\t\tfield = ''\n\t\t) {\n\t\t\tsuper()\n\t\t\t\n\t\t\tthis.handler = handler\n\t\t\tthis.host = Object( host )\n\t\t\tthis.field = field\n\t\t}\n\t\t\n\t\tdestroyed( next? : boolean ) {\n\t\t\tif( next ) {\n\t\t\t\tthis.unlink()\n\t\t\t\t\n\t\t\t\tconst host = this.host\n\t\t\t\tconst value = host[ this.field ]\n\t\t\t\tif( value instanceof $mol_object ) {\n\t\t\t\t\tif( ( value.object_owner() === host ) && ( value.object_field() === this.field ) ) {\n\t\t\t\t\t\tvalue.destroyed( true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thost[ this.field ] = undefined\n\t\t\t\thost[ this.field + '@' ] = undefined\n\t\t\t\t\n\t\t\t\tthis.status = $mol_atom_status.obsolete\n\t\t\t}\n\t\t\t\n\t\t\treturn super.destroyed( next )\n\t\t}\n\t\t\n\t\tunlink() {\n\t\t\tthis.disobey_all()\n\t\t\tthis.check_slaves()\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\treturn `${ this.host }.${ this.field }@`\n\t\t}\n\t\t\n\t\tget( force? : $mol_atom_force ) {\n\t\t\tif( this.status === $mol_atom_status.pulling ) {\n\t\t\t\tthrow new Error( `Cyclic atom dependency of ${ this }` )\n\t\t\t}\n\t\t\t\n\t\t\tthis.actualize( force )\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\tif( slave ) {\n\t\t\t\tthis.lead( slave )\n\t\t\t\tslave.obey( this )\n\t\t\t}\n\t\t\t\n\t\t\tconst value : Value = this.host[ this.field ]\n\t\t\t\n\t\t\tif( typeof Proxy !== 'function' && value instanceof Error ) {\n\t\t\t\tthrow value\n\t\t\t}\n\t\t\t\n\t\t\treturn value\n\t\t}\n\t\t\n\t\tactualize( force? : $mol_atom_force ) {\n\t\t\t\n\t\t\t//this.log([ 'actualize' ])\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.actual ) return\n\t\t\t\n\t\t\tconst slave = $mol_atom.stack[0]\n\t\t\t$mol_atom.stack[0] = this\n\t\t\t\n\t\t\tif( !force && this.status === $mol_atom_status.checking ) {\n\t\t\t\t\n\t\t\t\tthis.masters!.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tif( this.status !== $mol_atom_status.checking ) return\n\t\t\t\t\t\tmaster.actualize()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tif( this.status === $mol_atom_status.checking ) {\n\t\t\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif( force || this.status !== $mol_atom_status.actual ) {\n\t\t\t\t\n\t\t\t\tconst oldMasters = this.masters\n\t\t\t\tthis.masters = null\n\t\t\t\t\n\t\t\t\tif( oldMasters ) oldMasters.forEach(\n\t\t\t\t\tmaster => {\n\t\t\t\t\t\tmaster.dislead( this )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tthis.status = $mol_atom_status.pulling\n\t\t\t\tconst next = this.pull( force )\n\t\t\t\t\n\t\t\t\tthis.push( next )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_atom.stack[0] = slave\n\t\t}\n\t\t\n\t\tpull( force? : $mol_atom_force ) {\n\t\t\ttry {\n\t\t\t\treturn this.handler( this._next , force )\n\t\t\t} catch( error ) {\n\t\t\t\tif( error[ '$mol_atom_catched' ] ) return error\n\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\n\t\t\t\tconsole.error( error.stack || error )\n\t\t\t\t\n\t\t\t\tif(!( error instanceof Error )) {\n\t\t\t\t\terror = new Error( error.stack || error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\terror['$mol_atom_catched'] = true\n\t\t\t\treturn error\n\t\t\t}\n\t\t}\n\t\t\n\t\t_next? : Value|Error\n\t\t\n\t\tset( next : Value ) : Value {\n\t\t\tconst next_normal = this.normalize( next , this._next )\n\t\t\tif( next_normal === this._next ) return this.get()\n\t\t\tif( next_normal === this.host[ this.field ] ) return this.get()\n\t\t\t\n\t\t\tthis._next = next_normal\n\t\t\tthis.obsolete()\n\t\t\treturn this.get()\n\t\t}\n\t\t\n\t\tnormalize( next : Value , prev? : Value|Error ) : Value {\n\t\t\tif( next === prev ) return next\n\t\t\t\n\t\t\tif( ( next instanceof Array ) && ( prev instanceof Array ) && ( next.length === prev.length ) ) {\n\t\t\t\tfor( let i = 0 ; i < next.length ; ++i ) {\n\t\t\t\t\tif( next[ i ] !== prev[ i ] ) return next as any\n\t\t\t\t}\n\t\t\t\treturn prev as any\n\t\t\t}\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tpush( next_raw? : Value|Error ) {\n\t\t\tthis._next = undefined\n\t\t\t\n\t\t\tthis.status = $mol_atom_status.actual\n\t\t\t\n\t\t\tconst host = this.host\n\t\t\tconst prev = host[ this.field ]\n\t\t\t\n\t\t\tif( next_raw === undefined ) return prev\n\t\t\t\n\t\t\tlet next = ( next_raw instanceof Error ) ? next_raw : this.normalize( next_raw , prev )\n\t\t\t\n\t\t\tif( next === prev ) return prev\n\t\t\t\n\t\t\tif( next instanceof $mol_object ) {\n\t\t\t\tnext.object_field( this.field )\n\t\t\t\tnext.object_owner( host )\n\t\t\t}\n\t\t\t\n\t\t\tif(( typeof Proxy === 'function' )&&( next instanceof Error )) {\n\t\t\t\tnext = new Proxy( next , {\n\t\t\t\t\tget( target : Error ) {\n\t\t\t\t\t\tthrow target.valueOf()\n\t\t\t\t\t} ,\n\t\t\t\t\townKeys( target : Error ) {\n\t\t\t\t\t\tthrow target.valueOf()\n\t\t\t\t\t} ,\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\thost[ this.field ] = next\n\t\t\tthis.log( [ 'push' , next , prev ] )\n\t\t\t\n\t\t\tthis.obsolete_slaves()\n\t\t\t\n\t\t\treturn next as Value\n\t\t}\n\t\t\n\t\tobsolete_slaves() {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tthis.slaves.forEach( slave => slave.obsolete() )\n\t\t}\n\t\t\n\t\tcheck_slaves() {\n\t\t\tif( this.slaves ) {\n\t\t\t\tthis.slaves.forEach( slave => slave.check() )\n\t\t\t} else {\n\t\t\t\tif( this.autoFresh ) $mol_atom.actualize( this )\n\t\t\t}\n\t\t}\n\t\t\n\t\tcheck() {\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `May be obsolated while pulling ${ this }` )\n\t\t\t//}\n\t\t\t\n\t\t\tif( this.status === $mol_atom_status.actual ) {\n\t\t\t\t//this.log([ 'checking' ])\n\t\t\t\tthis.status = $mol_atom_status.checking\n\t\t\t\t\n\t\t\t\tthis.check_slaves()\n\t\t\t}\n\t\t}\n\t\t\n\t\tobsolete() {\n\t\t\tif( this.status === $mol_atom_status.obsolete ) return\n\t\t\t\n\t\t\t//if( this.status === $mol_atom_status.pulling ) {\n\t\t\t//\tthrow new Error( `Obsolated while pulling ${ this }` )\n\t\t\t//} \n\t\t\t\n\t\t\t// this.log( [ 'obsolete' ] )\n\t\t\t\n\t\t\tthis.status = $mol_atom_status.obsolete\n\t\t\t\n\t\t\tthis.check_slaves()\n\t\t\t\n\t\t\treturn\n\t\t}\n\t\t\n\t\tlead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) {\n\t\t\t\tthis.slaves = new Set<$mol_atom<any>>()\n\t\t\t\t$mol_atom.unreap( this )\n\t\t\t}\n\t\t\tthis.slaves.add( slave )\n\t\t}\n\t\t\n\t\tdislead( slave : $mol_atom<any> ) {\n\t\t\tif( !this.slaves ) return\n\t\t\t\n\t\t\tif( this.slaves.size === 1 ) {\n\t\t\t\tthis.slaves = null\n\t\t\t\t$mol_atom.reap( this )\n\t\t\t} else {\n\t\t\t\tthis.slaves.delete( slave )\n\t\t\t}\n\t\t}\n\t\t\n\t\tobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) this.masters = new Set< $mol_atom<any> >()\n\t\t\tthis.masters.add( master )\n\t\t}\n\t\t\n\t\tdisobey( master : $mol_atom<any> ) {\n\t\t\tif( !this.masters ) return\n\t\t\tthis.masters.delete( master )\n\t\t}\n\t\t\n\t\tdisobey_all() {\n\t\t\tif( !this.masters ) return\n\t\t\t\n\t\t\tthis.masters.forEach( master => master.dislead( this ) )\n\t\t\t\n\t\t\tthis.masters = null\n\t\t}\n\t\t\n\t\tvalue( next? : Value , force? : $mol_atom_force ) {\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn this.get( force )\n\t\t\t} else {\n\t\t\t\tif( force ) {\n\t\t\t\t\treturn this.push( next )\n\t\t\t\t} else {\n\t\t\t\t\treturn this.set( next )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tstatic stack = [] as $mol_atom<any>[]\n\t\tstatic updating : $mol_atom<any>[] = []\n\t\tstatic reaping = new Set< $mol_atom<any> >()\n\t\tstatic scheduled = false\n\t\t\n\t\tstatic actualize( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.updating.push( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic reap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.add( atom )\n\t\t\t$mol_atom.schedule()\n\t\t}\n\t\t\n\t\tstatic unreap( atom : $mol_atom<any> ) {\n\t\t\t$mol_atom.reaping.delete( atom )\n\t\t}\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.scheduled ) return\n\t\t\t\n\t\t\tnew $mol_defer(\n\t\t\t\t() => {\n\t\t\t\t\tif( !this.scheduled ) return\n\t\t\t\t\tthis.scheduled = false\n\t\t\t\t\tthis.sync()\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tthis.scheduled = true\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\t$mol_log( '$mol_atom.sync' , [] )\n\t\t\tthis.schedule()\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\tconst atom = this.updating.shift()\n\t\t\t\tif( !atom ) break\n\t\t\t\tif( this.reaping.has( atom ) ) continue\n\t\t\t\tif( !atom.destroyed() ) atom.get()\n\t\t\t}\n\t\t\t\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\tthis.reaping.forEach(\n\t\t\t\t\tatom => {\n\t\t\t\t\t\tthis.reaping.delete( atom )\n\t\t\t\t\t\tif( !atom.slaves ) atom.destroyed( true )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tthis.scheduled = false\n\t\t}\n\t\t\n\t\tthen< Next >( done : ( prev? : Value )=> Next , fail? : ( error : Error )=> Next ) {\n\t\t\t\n\t\t\tlet prev : Value\n\t\t\tlet next : Next\n\t\t\t\n\t\t\tconst atom = new $mol_atom<any>(\n\t\t\t\tthis ,\n\t\t\t\t() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( prev == undefined ) {\n\t\t\t\t\t\t\tconst val = this.get()\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val.valueOf()\n\t\t\t\t\t\t\tprev = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( next == undefined ) {\n\t\t\t\t\t\t\tconst val = done( prev )\n\t\t\t\t\t\t\tif( val instanceof $mol_atom_wait ) return val\n\t\t\t\t\t\t\tif( val ) val.valueOf()\n\t\t\t\t\t\t\tnext = val\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn next\n\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( error instanceof $mol_atom_wait ) return error\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( fail ) return fail( error )\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn error\n\t\t\t\t\t}\n\n\t\t\t\t} ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_atom.actualize( atom )\n\t\t\t\n\t\t\treturn atom\n\t\t}\n\t\t\n\t\tcatch( fail : ( error : Error )=> Value ) {\n\t\t\treturn this.then( next => next , fail )\n\t\t}\n\t\t\n\t}\n\t\n\t$mol_state_stack.set( '$mol_atom.stack' , $mol_atom.stack )\n\t\n\texport class $mol_atom_wait extends Error {\n\t\tname = '$mol_atom_wait'\n\t\t\n\t\tconstructor( message = 'Wait...' ) {\n\t\t\tsuper( message )\n\t\t\tthis['__proto__'] = new.target.prototype\n\t\t}\n\t}\n\t\n\texport class $mol_atom_force extends Object {\n\t\t$mol_atom_force : boolean\n\t\tstatic $mol_atom_force : boolean\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\n\t\t'cached property with simple key'() {\t\t\t\t\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key()\n\t\t\t\tfoo( id : number , next? : Number|String ) {\n\t\t\t\t\tif( next == null ) return new Number( 123 )\n\t\t\t\t\treturn new Number( next )\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t// get\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\t\t\t$mol_assert_equal( x.foo( 0 ) , x.foo( 0 ) )\n\t\t\t$mol_assert_unique( x.foo( 0 ) , x.foo( 1 ) )\n\n\t\t\t// set\n\t\t\tx.foo( 0 , 321 )\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 321 )\n\n\t\t\t// reset\n\t\t\tx.foo( 0 , null )\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo( 0 ).valueOf() , 123 )\n\n\t\t} ,\n\n\t\t'cached property with complex key'() {\n\n\t\t\tclass X extends $mol_object {\n\t\t\t\t@ $mol_mem_key()\n\t\t\t\tfoo( ids : number[] ) {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst x = new X\n\n\t\t\t$mol_assert_equal( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 1 ] ) )\n\t\t\t$mol_assert_unique( x.foo( [ 0 , 1 ] ) , x.foo( [ 0 , 2 ] ) )\n\t\t} ,\n\n\t\t'auto sync of properties'() {\n\n\t\t\tclass X extends $mol_object {\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tfoo( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\txxx() {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst x = new X\n\t\t\t$mol_assert_equal( x.bar() , 2 )\n\t\t\t$mol_assert_equal( x.xxx() , 3 )\n\n\t\t\tx.foo( 5 )\n\t\t\t$mol_assert_equal( x.xxx() , 7 )\n\t\t} ,\n\n\t\t//'must fail on recursive dependency'() {\n\t\t//\n\t\t//\tclass X extends $mol_object {\n\t\t//\n\t\t//\t\t@ $mol_prop()\n\t\t//\t\tfoo() : number {\n\t\t//\t\t\treturn this.foo() + 1\n\t\t//\t\t}\n\t\t//\n\t\t//\t}\n\t\t//\n\t\t//\tvar x = new X\n\t\t//\n\t\t//\ttry {\n\t\t//\t\tx.foo().valueOf()\n\t\t//\t\t$mol_assert_fail( 'Not tracked recursive dependency' )\n\t\t//\t} catch( error ) {\n\t\t//\t\t$mol_assert_equal( error.message , 'Recursive dependency! .foo()' )\n\t\t//\t}\n\t\t//} ,\n\n\t\t'must be deferred destroyed when no longer referenced'() {\n\n\t\t\tlet foo : any\n\n\t\t\tclass B extends $mol_object {\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tshowing( next? : boolean ) {\n\t\t\t\t\tif( next === void 0 ) return true\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tfoo() {\n\t\t\t\t\treturn foo = new $mol_object\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tbar() {\n\t\t\t\t\treturn this.showing() ? this.foo() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar b = new B\n\n\t\t\tvar bar = b.bar()\n\t\t\t$mol_assert_ok( bar )\n\n\t\t\tb.showing( false )\n\t\t\tb.bar()\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_ok( foo.destroyed() )\n\t\t\t$mol_assert_ok( bar.destroyed() )\n\t\t\t$mol_assert_not( b.bar() )\n\n\t\t\tb.showing( true )\n\t\t\t$mol_defer.run()\n\t\t\t$mol_assert_unique( b.bar() , bar )\n\t\t} ,\n\n\t\t'wait for data'() {\n\n\t\t\tclass Test extends $mol_object {\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tsource( next? : string , force? : $mol_atom_force ) : string {\n\t\t\t\t\tnew $mol_defer( () => {\n\t\t\t\t\t\tthis.source( 'Jin' , $mol_atom_force )\n\t\t\t\t\t} )\n\t\t\t\t\tthrow new $mol_atom_wait( 'Wait for data!' )\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\tmiddle() {\n\t\t\t\t\treturn this.source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_mem()\n\t\t\t\ttarget() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst t = new Test\n\n\t\t\t$mol_assert_fail( ()=> t.target().valueOf() , $mol_atom_wait )\n\n\t\t\t$mol_defer.run()\n\n\t\t\t$mol_assert_equal( t.target() , 'Jin' )\n\t\t} ,\n\n\t} )\n\n}\n","namespace $ {\n\t\n\texport function $mol_mem< Host , Value >(\n\t\tconfig? : {\n\t\t\tlazy? : boolean\n\t\t}\n\t) {\n\t\t\n\t\treturn function(\n\t\t\tobj : Host ,\n\t\t\tname : string ,\n\t\t\tdescr : TypedPropertyDescriptor< ( next? : Value , force? : $mol_atom_force )=> Value >\n\t\t) {\n\t\t\tconst value = descr.value\n\t\t\t\n\t\t\tdescr.value = function( next? : Value , force? : $mol_atom_force ) {\n\t\t\t\tconst host : any = this\n\t\t\t\tconst field = name + \"()\"\n\t\t\t\tconst fieldA = field + '@'\n\t\t\t\t\n\t\t\t\tlet atom : $mol_atom<Value> = host[ fieldA ]\n\t\t\t\tif( !atom ) {\n\t\t\t\t\tif( force && ( next === undefined ) ) return next\n\t\t\t\t\t\n\t\t\t\t\thost[ fieldA ] = atom = new $mol_atom<Value>(\n\t\t\t\t\t\thost ,\n\t\t\t\t\t\tvalue.bind( host ) as any , // FIXME: type checking\n\t\t\t\t\t\tfield ,\n\t\t\t\t\t)\n\t\t\t\t\tif( config ) atom.autoFresh = !config.lazy\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.value( next , force )\n\t\t\t}\n\t\t\t\n\t\t\tvoid( (<any>descr.value)[ 'value' ] = value )\n\t\t}\n\t\t\n\t}\n\t\n\texport function $mol_mem_key< Host , Key , Value >(\n\t\tconfig? : {\n\t\t\tlazy? : boolean\n\t\t}\n\t) {\n\t\t\n\t\treturn function(\n\t\t\tobj : Host ,\n\t\t\tname : string ,\n\t\t\tdescr : TypedPropertyDescriptor< ( key : Key , next? : Value , force? : $mol_atom_force )=> Value >\n\t\t) {\n\t\t\tconst value = descr.value\n\n\t\t\tdescr.value = function( key : Key , next? : Value , force? : $mol_atom_force ) {\n\t\t\t\tconst host : any = this\n\t\t\t\tconst field = name + \"(\" + JSON.stringify( key ) + \")\"\n\t\t\t\tconst fieldA = field + '@'\n\t\t\t\t\n\t\t\t\tlet atom : $mol_atom<Value> = host[ fieldA ]\n\t\t\t\tif( !atom ) {\n\t\t\t\t\tif( force && ( next === undefined ) ) return next\n\t\t\t\t\t\n\t\t\t\t\thost[ fieldA ] = atom = new $mol_atom<Value>(\n\t\t\t\t\t\thost ,\n\t\t\t\t\t\tvalue.bind( host , key ) as any , // FIXME: type checking\n\t\t\t\t\t\tfield ,\n\t\t\t\t\t)\n\t\t\t\t\tif( config ) atom.autoFresh = !config.lazy\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.value( next , force )\n\t\t\t}\n\t\t\t\n\t\t\tvoid( (<any>descr.value)[ 'value' ] = value )\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t$mol_test( { \n\t\t\n\t\t'const returns stored value'() {\n\t\t\n\t\t\tconst foo = { bar : $mol_const( Math.random() ) }\n\t\t\t\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar() )\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar['()'] )\n\t\t\t\n\t\t} ,\n\n\t} )\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\treturn getter\n\t}\n}\n","declare var Proxy : any\ndeclare var require : ( path : string )=> any\n\nvar $node = new Proxy( {} , { get( target : any, field : string , wrapper : any ) {\n\treturn require( field )\n} } )\n","namespace $ {\n\t\n\texport class $mol_file extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key()\n\t\tstatic absolute( path : string ) {\n\t\t\treturn $mol_file.make({\n\t\t\t\tpath : $mol_const( path )\n\t\t\t})\n\t\t}\n\t\t\n\t\tstatic relative( path : string ) : $mol_file {\n\t\t\treturn $mol_file.absolute( $node.path.resolve( path ).replace( /\\\\/g , '/' ) )\n\t\t}\n\t\t\n\t\tpath() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\twatcher() {\n\t\t\tconst watcher = $node.fs.watch(\n\t\t\t\tthis.path() ,\n\t\t\t\t{ persistent : false } ,\n\t\t\t\t( type : string , name : string )=> {\n\t\t\t\t\tif( !name ) this.stat( undefined , $mol_atom_force )\n\t\t\t\t\telse if( !/(^\\.|___$)/.test( name ) ) {\n\t\t\t\t\t\tvar file = this.resolve( name )\n\t\t\t\t\t\tfile.stat( undefined , $mol_atom_force )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\twatcher.on(\n\t\t\t\t'error' , ( error : Error )=> {\n\t\t\t\t\tthis.stat( error , $mol_atom_force )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn watcher\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tstat( next? : any , force? : $mol_atom_force ) {\n\t\t\tvar path = this.path()\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvar stat = next || $node.fs.statSync( path )\n\t\t\t} catch( error ) {\n\t\t\t\tif( error.code === 'ENOENT' ) return null\n\t\t\t\treturn error\n\t\t\t}\n\t\t\t\n\t\t\tthis.parent().watcher()\n\t\t\t\n\t\t\treturn stat\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tversion() {\n\t\t\treturn this.stat().mtime.getTime().toString( 36 ).toUpperCase()\n\t\t}\n\t\t\n\t\texists( next? : boolean ) {\n\t\t\tvar exists = !!this.stat()\n\t\t\t\n\t\t\tif( next === void 0 ) {\n\t\t\t\treturn exists\n\t\t\t} else {\n\t\t\t\tif( next == exists ) return exists\n\t\t\t\t\n\t\t\t\tif( next ) {\n\t\t\t\t\tthis.parent().exists( true )\n\t\t\t\t\t$node.fs.mkdirSync( this.path() )\n\t\t\t\t} else {\n\t\t\t\t\t$node.fs.unlinkSync( this.path() )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.stat( undefined , $mol_atom_force )\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t}\n\t\t\n\t\tparent() {\n\t\t\treturn this.resolve( '..' )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\ttype() {\n\t\t\tvar stat = this.stat()\n\t\t\t\n\t\t\tif( stat ) {\n\t\t\t\tif( stat.isFile() ) return 'file'\n\t\t\t\tif( stat.isDirectory() ) return 'dir'\n\t\t\t\tif( stat.isBlockDevice() ) return 'blocks'\n\t\t\t\tif( stat.isCharacterDevice() ) return 'chars'\n\t\t\t\tif( stat.isSymbolicLink() ) return 'link'\n\t\t\t\tif( stat.isFIFO() ) return 'fifo'\n\t\t\t\tif( stat.isSocket() ) return 'socket'\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error( `Unknown file type ${this.path()}` )\n\t\t}\n\t\t\n\t\tname() {\n\t\t\treturn $node.path.basename( this.path() )\n\t\t}\n\t\t\n\t\text() {\n\t\t\tvar match = /((?:\\.\\w+)+)$/.exec( this.path() )\n\t\t\treturn match ? match[ 1 ].substring( 1 ) : ''\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tcontent( next? : string , force? : $mol_atom_force ) {\n\t\t\tif( next === void 0 ) {\n\t\t\t\treturn this.stat() && $node.fs.readFileSync( this.path() )//.toString()\n\t\t\t}\n\t\t\t\n\t\t\tthis.parent().exists( true )\n\t\t\t$node.fs.writeFileSync( this.path() , next )\n\t\t\t\n\t\t\treturn next//.toString()\n\t\t}\n\t\t\n\t\treader() {\n\t\t\treturn $node.fs.createReadStream( this.path() )\n\t\t}\n\t\t\n\t\twriter() {\n\t\t\treturn $node.fs.createWriteStream( this.path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tsub() : $mol_file[] {\n\t\t\tthis.stat()\n\t\t\t\n\t\t\tswitch( this.type() ) {\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn ( <string[]> $node.fs.readdirSync( this.path() ) )\n\t\t\t\t\t.filter( name => !/^\\.+$/.test( name ) )\n\t\t\t\t\t.map( name => this.resolve( name ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn []\n\t\t}\n\t\t\n\t\tresolve( path : string ) : $mol_file {\n\t\t\treturn this.Class().relative( $node.path.join( this.path() , path ) )\n\t\t}\n\t\t\n\t\trelate( base = this.Class().relative( '.' ) ) {\n\t\t\treturn $node.path.relative( base.path() , this.path() ).replace( /\\\\/g , '/' )\n\t\t}\n\t\t\n\t\tappend( next : string ) {\n\t\t\t$node.fs.appendFileSync( this.path() , next )\n\t\t}\n\t\t\n\t\tfind(\n\t\t\tinclude? : RegExp ,\n\t\t\texclude? : RegExp\n\t\t) {\n\t\t\t\n\t\t\tvar found : $mol_file[] = []\n\t\t\tthis.sub().forEach(\n\t\t\t\tchild => {\n\t\t\t\t\tif( exclude && child.path().match( exclude ) ) return\n\t\t\t\t\tif( !include || child.path().match( include ) ) found.push( child )\n\t\t\t\t\tif( child.type() === 'dir' ) found = found.concat( child.find( include , exclude ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn found\n\t\t}\n\t\t\n\t}\n\t\n}\n","module $ {\n\t$mol_test({\n\t\t\n\t\t'scalars'() {\n\t\t\t$mol_assert_equal( $mol_typeof( void 0 ) , 'Undefined' )\n\t\t\t$mol_assert_equal( $mol_typeof( null ) , 'Null' )\n\t\t\t$mol_assert_equal( $mol_typeof( 0 ) , 'Number' )\n\t\t\t$mol_assert_equal( $mol_typeof( '' ) , 'String' )\n\t\t\t$mol_assert_equal( $mol_typeof( false ) , 'Boolean' )\n\t\t} ,\n\t\t\n\t\t'common objects'() {\n\t\t\t$mol_assert_equal( $mol_typeof( {} ) , 'Object' )\n\t\t\t$mol_assert_equal( $mol_typeof( [] ) , 'Array' )\n\t\t\t$mol_assert_equal( $mol_typeof( arguments ) , 'Arguments' )\n\t\t} ,\n\t\t\n\t\t'special classes'() {\n\t\t\t$mol_assert_equal( $mol_typeof( new Date ) , 'Date' )\n\t\t\t$mol_assert_equal( $mol_typeof( new RegExp( '' ) ) , 'RegExp' )\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_typeof( value : any ) {\n\t\tvar str = {}.toString.apply( value )\n\t\tvar type = str.substring( 8, str.length - 1 )\n\t\treturn type\n\t}\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'tree parsing'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\nbar\\n\" ).sub[ 1 ].type , \"bar\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo\\n\\n\\n\" ).sub.length , 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub.length , 2 )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"=foo\\n\\\\bar\\n\" ).sub[ 1 ].data , \"bar\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar \\\\pol\" ).sub[ 0 ].sub[ 0 ].sub[ 0 ].data , \"pol\" )\n\t\t\t$mol_assert_equal( $mol_tree.fromString( \"foo bar\\n\\t\\\\pol\\n\\t\\\\men\" ).sub[ 0 ].sub[ 0 ].sub[ 1 ].data , \"men\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_tree.fromString( 'foo bar \\\\text\\n' ).toString() , 'foo bar \\\\text\\n' )\n\t\t} ,\n\t\t\n\t} )\t\n}\n","namespace $ {\n\t\n\texport class $mol_tree {\n\t\t\n\t\ttype : string\n\t\tdata : string\n\t\tsub : $mol_tree[]\n\t\tbaseUri : string\n\t\trow : number\n\t\tcol : number\n\t\t\n\t\tconstructor(\n\t\t\tconfig : {\n\t\t\t\ttype? : string\n\t\t\t\tvalue? : string\n\t\t\t\tdata? : string\n\t\t\t\tsub? : $mol_tree[]\n\t\t\t\tbaseUri? : string\n\t\t\t\trow? : number\n\t\t\t\tcol? : number\n\t\t\t}\n\t\t) {\n\t\t\tthis.type = config.type || ''\n\t\t\tif( config.value ) {\n\t\t\t\tvar sub = $mol_tree.values( config.value )\n\t\t\t\tif( config.type || sub.length > 1 ) {\n\t\t\t\t\tthis.sub = sub.concat( config.sub || [] )\n\t\t\t\t\tthis.data = config.data || ''\n\t\t\t\t} else {\n\t\t\t\t\tthis.data = sub[ 0 ].data\n\t\t\t\t\tthis.sub = config.sub || []\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.data = config.data || ''\n\t\t\t\tthis.sub = config.sub || []\n\t\t\t}\n\t\t\tthis.baseUri = config.baseUri || ''\n\t\t\tthis.row = config.row || 0\n\t\t\tthis.col = config.col || 0\n\t\t}\n\t\t\n\t\tstatic values( str : string , baseUri? : string ) {\n\t\t\treturn str.split( '\\n' ).map(\n\t\t\t\t( data , index ) => new $mol_tree(\n\t\t\t\t\t{\n\t\t\t\t\t\tdata : data ,\n\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\trow : index + 1\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\t\n\t\tclone(\n\t\t\tconfig : {\n\t\t\t\ttype? : string\n\t\t\t\tvalue? : string\n\t\t\t\tdata? : string\n\t\t\t\tsub? : $mol_tree[]\n\t\t\t\tbaseUri? : string\n\t\t\t\trow? : number\n\t\t\t\tcol? : number\n\t\t\t}\n\t\t) {\n\t\t\treturn new $mol_tree(\n\t\t\t\t{\n\t\t\t\t\ttype : ( 'type' in config ) ? config.type : this.type ,\n\t\t\t\t\tdata : ( 'data' in config ) ? config.data : this.data ,\n\t\t\t\t\tsub : ( 'sub' in config ) ? config.sub : this.sub ,\n\t\t\t\t\tbaseUri : ( 'baseUri' in config ) ? config.baseUri : this.baseUri ,\n\t\t\t\t\trow : ( 'row' in config ) ? config.row : this.row ,\n\t\t\t\t\tcol : ( 'col' in config ) ? config.col : this.col ,\n\t\t\t\t\tvalue : config.value\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\tstatic fromString( str : string , baseUri? : string ) {\n\t\t\t\n\t\t\tvar root = new $mol_tree( { baseUri : baseUri } )\n\t\t\tvar stack = [ root ]\n\t\t\t\n\t\t\tvar row = 0\n\t\t\tvar lines = String( str ).split( /\\n/ )\n\t\t\tlines.forEach(\n\t\t\t\tline => {\n\t\t\t\t\t++row\n\t\t\t\t\t\n\t\t\t\t\tvar chunks = /^(\\t*)((?:[^\\n\\t\\\\ ]+ *)*)(\\\\[^\\n]*)?$\\n?/m.exec( line )\n\t\t\t\t\tif( !chunks ) throw new Error( `Syntax error at ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\n\t\t\t\t\tvar indent = chunks[ 1 ]\n\t\t\t\t\tvar path = chunks[ 2 ]\n\t\t\t\t\tvar data = chunks[ 3 ]\n\t\t\t\t\t\n\t\t\t\t\tvar deep = indent.length\n\t\t\t\t\tvar types = path ? path.replace( / $/ , '' ).split( / +/ ) : []\n\t\t\t\t\t\n\t\t\t\t\tif( stack.length <= deep ) throw new Error( `Too many tabs at ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\n\t\t\t\t\tstack.length = deep + 1\n\t\t\t\t\tvar parent = stack[ deep ];\n\t\t\t\t\t\n\t\t\t\t\ttypes.forEach(\n\t\t\t\t\t\ttype => {\n\t\t\t\t\t\t\tif( !type ) throw new Error( `Unexpected space symbol ${baseUri}:${row}\\n${line}` )\n\t\t\t\t\t\t\tvar next = new $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype : type ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\t\trow : row\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tparent.sub.push( next )\t\n\t\t\t\t\t\t\tparent = next\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\tif( data ) {\n\t\t\t\t\t\tvar next = new $mol_tree(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata : data.substring( 1 ) ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\trow : row\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t\tparent.sub.push( next )\n\t\t\t\t\t\tparent = next\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstack.push( parent )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\tstatic fromJSON( json : any , baseUri = '' ) : $mol_tree {\n\t\t\tvar type = $mol_typeof( json )\n\t\t\tswitch( type ) {\n\t\t\t\tcase 'Boolean' :\n\t\t\t\tcase 'Null' :\n\t\t\t\tcase 'Number' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : String( json ) ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'String' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue : json ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Array' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"list\" ,\n\t\t\t\t\t\t\tsub : ( <any[]> json ).map( json => $mol_tree.fromJSON( json , baseUri ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Date' :\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"time\" ,\n\t\t\t\t\t\t\tvalue : json.toISOString() ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tcase 'Object' :\n\t\t\t\t\tvar sub : $mol_tree[] = []\n\t\t\t\t\tfor( var key in json ) {\n\t\t\t\t\t\tif( json[ key ] === undefined ) continue\n\t\t\t\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\t\t\t\t\t\t\tvar child = new $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype : key ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar child = new $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue : key ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchild.sub.push(\n\t\t\t\t\t\t\tnew $mol_tree(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype : \":\" ,\n\t\t\t\t\t\t\t\t\tsub : [ $mol_tree.fromJSON( json[ key ] , baseUri ) ] ,\n\t\t\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\tsub.push( child )\n\t\t\t\t\t}\n\t\t\t\t\treturn new $mol_tree(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype : \"dict\" ,\n\t\t\t\t\t\t\tsub : sub ,\n\t\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t}\n\t\t\tthrow new Error( `Unsupported type (${type}) at ${baseUri}` )\n\t\t}\n\t\t\n\t\tget uri() {\n\t\t\treturn this.baseUri + '#' + this.row + ':' + this.col\n\t\t}\n\t\t\n\t\ttoString( prefix = '' ) : string {\n\t\t\tvar output = ''\n\t\t\t\n\t\t\tif( this.type.length ) {\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\t\t\t\toutput += this.type + \" \"\n\t\t\t\tif( this.sub.length == 1 ) {\n\t\t\t\t\treturn output + this.sub[ 0 ].toString( prefix )\n\t\t\t\t}\n\t\t\t\toutput += \"\\n\"\n\t\t\t} else if( this.data.length || prefix.length ) {\n\t\t\t\toutput += \"\\\\\" + this.data + \"\\n\"\n\t\t\t}\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\toutput += prefix\n\t\t\t\toutput += child.toString( prefix + \"\\t\" )\n\t\t\t}\n\t\t\treturn output\n\t\t}\n\t\t\n\t\ttoJSON() : any {\n\t\t\tif( !this.type ) return this.value\n\t\t\t\n\t\t\tif( this.type === '//' ) return undefined\n\t\t\t\n\t\t\tif( this.type === 'true' ) return true\n\t\t\tif( this.type === 'false' ) return false\n\t\t\tif( this.type === 'null' ) return null\n\t\t\t\n\t\t\tif( this.type === 'dict' ) {\n\t\t\t\tvar obj = {}\n\t\t\t\tfor( var child of this.sub ) {\n\t\t\t\t\tvar key = child.type || child.value\n\t\t\t\t\tif( key === '//' ) continue\n\t\t\t\t\tvar colon = child.select( ':' ).sub[ 0 ]\n\t\t\t\t\tif( !colon ) throw new Error( `Required colon after key at ${child.uri}` )\n\t\t\t\t\tvar val = colon.sub[ 0 ].toJSON()\n\t\t\t\t\tif( val !== undefined ) (<any>obj)[ key ] = val\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'list' ) {\n\t\t\t\tvar res : any[] = []\n\t\t\t\tthis.sub.forEach(\n\t\t\t\t\tchild => {\n\t\t\t\t\t\tvar val = child.toJSON()\n\t\t\t\t\t\tif( val !== undefined ) res.push( val )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\treturn res\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'time' ) {\n\t\t\t\treturn new Date( this.value )\n\t\t\t}\n\t\t\t\n\t\t\tif( String( Number( this.type ) ) == this.type.trim() ) return Number( this.type )\n\t\t\t\n\t\t\tthrow new Error( `Unknown type (${this.type}) at ${this.uri}` )\n\t\t}\n\t\t\n\t\tget value() {\n\t\t\tvar values : string[] = []\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\tif( child.type ) continue\n\t\t\t\tvalues.push( child.value )\n\t\t\t}\n\t\t\treturn this.data + values.join( \"\\n\" )\n\t\t}\n\t\t\n\t\tselect( ...path : string[] ) {\n\t\t\tif( typeof path === 'string' ) path = (<string>path).split( / +/ )\n\t\t\t\n\t\t\tvar next = [ <$mol_tree>this ]\n\t\t\tfor( var type of path ) {\n\t\t\t\tif( !next.length ) break\n\t\t\t\tvar prev = next\n\t\t\t\tnext = []\n\t\t\t\tfor( var item of prev ) {\n\t\t\t\t\tfor( var child of item.sub ) {\n\t\t\t\t\t\tif( child.type == type ) {\n\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new $mol_tree( { sub : next } )\n\t\t}\n\t\t\n\t\tfilter( path : string[] , value? : string ) {\n\t\t\tif( typeof path === 'string' ) path = (<string>path).split( / +/ )\n\t\t\t\n\t\t\tvar sub = this.sub.filter(\n\t\t\t\tfunction( item ) {\n\t\t\t\t\t\n\t\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\t\n\t\t\t\t\tif( value == null ) {\n\t\t\t\t\t\treturn Boolean( found.sub.length )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found.sub.some( child => child.value == value )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn new $mol_tree( { sub : sub } )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_window extends $mol_object {\n\t\t\n\t\tstatic size( next? : {\n\t\t\twidth : number\n\t\t\theight: number\n\t\t} ) {\n\t\t\treturn next || {\n\t\t\t\twidth : 1024 ,\n\t\t\t\theight : 768 ,\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_dom_context = $node['jsdom'].jsdom().defaultView as any\n\t\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : Window & {\n\t\tNode : typeof Node\n\t\tElement : typeof Element\n\t\tHTMLElement : typeof HTMLElement\n\t\tXMLHttpRequest : typeof XMLHttpRequest\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make html:span'() {\n\t\t\tconst dom = $mol_dom_make( '$mol_dom_make_test' ) as HTMLSpanElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML , '<span id=\"$mol_dom_make_test\"></span>' )\n\t\t} ,\n\t\t\n\t\t'Make svg:svg'() {\n\t\t\tconst dom = $mol_dom_make( '$mol_dom_make_test' , 'svg' , 'http://www.w3.org/2000/svg' )\n\t\t\t\n\t\t\t$mol_assert_equal( ( dom as HTMLElement ).outerHTML , '<svg id=\"$mol_dom_make_test\"></svg>' )\n\t\t\t//$mol_assert_equal( ( dom as SVGSVGElement ).viewBox.baseVal.width , 0 ) // https://github.com/tmpvar/jsdom/pull/1445\n\t\t} ,\n\t\t\n\t\t'Make to exists element'() {\n\t\t\tconst body = $mol_dom_context.document.body\n\t\t\t\n\t\t\tconst dom = $mol_dom_make( '$mol_dom_make_test' ) as HTMLSpanElement\n\t\t\t\n\t\t\ttry {\n\t\t\t\tbody.appendChild( dom )\n\t\t\t\t$mol_assert_equal( dom , $mol_dom_make( '$mol_dom_make_test' ) )\n\t\t\t} finally {\n\t\t\t\tbody.removeChild( dom )\n\t\t\t}\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_dom_make( id? : string , localName = 'span' ,  namespaceURI = 'http://www.w3.org/1999/xhtml' ) {\n\t\tconst document = $mol_dom_context.document\n\t\t\n\t\tlet node = id && document.getElementById( id ) as Element\n\t\tif( !node ) {\n\t\t\tnode = document.createElementNS( namespaceURI , localName )\n\t\t\tif( id ) node.id = id\n\t\t}\n\t\t\n\t\treturn node\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_fields (\n\t\tel : Element ,\n\t\tfields : { [ key : string ] : any }\n\t) {\n\t\tfor( let key in fields ) {\n\t\t\t\n\t\t\tconst val : any = fields[ key ]\n\t\t\t\n\t\t\tif( val === undefined ) continue\n\t\t\tif( el[ key ] === val ) continue\n\t\t\t\n\t\t\tel[ key ] = val\n\t\t\tif( el[ key ] === val ) continue\n\t\t\t\n\t\t\tconst setter = ()=> {\n\t\t\t\tel.removeEventListener( 'DOMNodeInsertedIntoDocument' , setter , { passive : true } as any )\n\t\t\t\tnew $mol_defer( ()=> {\n\t\t\t\t\tel[ key ] = val\n\t\t\t\t} )\n\t\t\t}\n\t\t\tel.addEventListener( 'DOMNodeInsertedIntoDocument' , setter , { passive : true } as any )\n\t\t\t\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_children (\n\t\tel : Element ,\n\t\tchildNodes : NodeList | Array< Node | string | number | boolean | { dom_tree : ()=> Node } >\n\t) {\n\t\tconst nodes = [] as ( Node | string )[]\n\t\t\n\t\tfor( let i = 0 ; i < childNodes.length ; ++i ) {\n\t\t\tlet node = childNodes[ i ] as any\n\t\t\tif( node == null ) continue\n\t\t\tif( Object( node ) === node ) {\n\t\t\t\tif( node[ 'dom_tree' ] ) node = node[ 'dom_tree' ]()\n\t\t\t\tnodes.push( node )\n\t\t\t} else {\n\t\t\t\tnodes.push( String( node ) )\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet nextNode = el.firstChild\n\t\tfor( let view_ of nodes ) {\n\t\t\tconst view = view_.valueOf() as Node\n\t\t\t\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( nodes.indexOf( nextNode ) === -1 ) {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tnextNode.nodeValue = String( view )\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_attributes (\n\t\tel : Element ,\n\t\tattrs : { [ key : string ] : string|number|boolean }\n\t) {\n\t\tfor( let name in attrs ) {\n\t\t\tlet val = attrs[ name ] as any\n\t\t\tif( el.getAttribute( name ) === val ) continue\n\t\t\tif( val === null || val === false ) el.removeAttribute( name )\n\t\t\telse el.setAttribute( name , String( val ) )\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_styles (\n\t\tel : Element ,\n\t\tstyles : { [ key : string ] : string|number }\n\t) {\n\t\tfor( let name in styles ) {\n\t\t\tlet val = styles[ name ]\n\t\t\t\n\t\t\tconst style = ( <HTMLElement>el ).style as any\n\t\t\tconst cur = style[ name ]\n\t\t\t\n\t\t\tif( typeof val === 'number' ) {\n\t\t\t\tif( parseFloat( cur ) == val ) continue\n\t\t\t\tstyle[ name ] = `${ val }px`\n\t\t\t}\n\t\t\t\n\t\t\tif( cur !== val ) style[ name ] = val\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_events (\n\t\tel : Element ,\n\t\tevents : { [ key : string ] : ( event : Event )=> any }\n\t) {\n\t\tfor( let name in events ) {\n\t\t\tel.addEventListener( name , events[ name ] , { passive : false } as any )\n\t\t}\n\t}\n\t\n\texport function $mol_dom_render_events_async (\n\t\tel : Element ,\n\t\tevents : { [ key : string ] : ( event : Event )=> any }\n\t) {\n\t\tfor( let name in events ) {\n\t\t\tel.addEventListener( name , events[ name ] , { passive : true } as any )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'id auto generation'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test_item extends $mol_view { }\n\t\t\t\n\t\t\tclass $mol_view_test_block extends $mol_view {\n\t\t\t\t\n\t\t\t\t@ $mol_mem_key()\n\t\t\t\telement( id : number ) {\n\t\t\t\t\treturn new $mol_view_test_item()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test_block()\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node().id , '' )\n\t\t\t$mol_assert_equal( x.element( 0 ).dom_node().id , '.element(0)' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'caching ref to dom node'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view { }\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node() , x.dom_node() )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'content render'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tsub() {\n\t\t\t\t\treturn [ 'lol' , 5 ]\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree()\n\t\t\t\n\t\t\t$mol_assert_equal( node.innerHTML , 'lol5' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'bem attributes generation'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test_item extends $mol_view { }\n\t\t\t\n\t\t\tclass $mol_view_test_block extends $mol_view {\n\t\t\t\t\n\t\t\t\t@ $mol_mem_key()\n\t\t\t\tElement( id : number ) {\n\t\t\t\t\treturn new $mol_view_test_item()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test_block()\n\t\t\t\n\t\t\t$mol_assert_equal( x.dom_node().getAttribute( 'mol_view_test_block' ) , '' )\n\t\t\t$mol_assert_equal( x.dom_node().getAttribute( 'mol_view' ) , '' )\n\t\t\t\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view_test_block_element' ) , '' )\n\t\t\t\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view_test_item' ) , '' )\n\t\t\t$mol_assert_equal( x.Element( 0 ).dom_node().getAttribute( 'mol_view' ) , '' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'render custom attributes'() {\n\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tattr() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'href' : '#haha' ,\n\t\t\t\t\t\t'required' : true ,\n\t\t\t\t\t\t'hidden' : false ,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree()\n\t\t\t\n\t\t\t$mol_assert_equal( node.getAttribute( 'href' ) , '#haha' )\n\t\t\t$mol_assert_equal( node.getAttribute( 'required' ) , 'true' )\n\t\t\t$mol_assert_equal( node.getAttribute( 'hidden' ) , null )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'render custom fields'() {\n\t\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tfield() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'hidden' : true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_tree() as HTMLElement\n\t\t\t\n\t\t\t$mol_assert_equal( node.hidden , true )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'attach event handlers'() {\n\t\t\t\t\n\t\t\tvar clicked = false\n\t\t\t\n\t\t\tclass $mol_view_test extends $mol_view {\n\t\t\t\tevent() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'click' : ( next? : Event ) => this.event_click( next )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevent_click( next? : Event ) {\n\t\t\t\t\tclicked = true\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = new $mol_view_test()\n\t\t\t\n\t\t\tvar node = x.dom_node() as HTMLElement\n\t\t\tnode.click()\n\t\t\t\n\t\t\t$mol_assert_ok( clicked )\n\t\t\t\n\t\t} ,\n\t\n\t} )\n}\n","namespace $ {\n\t\n\texport namespace $mol { let $mol }\n\n\texport type $mol_view_context = ( typeof $ )&( typeof $.$mol )\n\t\n\texport function $mol_view_visible_width() {\n\t\treturn $mol_window.size().width\n\t}\n\t\n\texport function $mol_view_visible_height() {\n\t\treturn $mol_window.size().height\n\t}\n\t\n\texport function $mol_view_state_key( suffix : string ) {\n\t\treturn suffix\n\t}\n\n\t/// Reactive statefull lazy ViewModel\n\texport class $mol_view extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key()\n\t\tstatic Root( id : number ) {\n\t\t\treturn new this\n\t\t}\n\t\t\n\t\ttitle() : string {\n\t\t\treturn this.Class().toString()\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tfocused( next?: boolean ) {\n\t\t\tlet node = this.dom_node()\n\t\t\tconst value = $mol_view_selection.focused( next === undefined ? undefined : [ node ] )\n\t\t\treturn value.indexOf( node ) !== -1\n\t\t} \n\t\t\n\t\t@ $mol_mem()\n\t\tcontext( next? : $mol_view_context ) {\n\t\t\treturn next || $ as any\n\t\t}\n\t\t\n\t\tget $() {\n\t\t\treturn this.context()\n\t\t}\n\t\tset $( next : $mol_view_context ) {\n\t\t\tthis.context( next )\n\t\t}\n\t\t\n\t\tcontext_sub() {\n\t\t\treturn this.context()\n\t\t}\n\t\t\n\t\tstate_key( suffix = '' ) {\n\t\t\treturn this.$.$mol_view_state_key( suffix )\n\t\t}\n\t\t\n\t\t/// Name of element that created when element not found in DOM\n\t\tdom_name() {\n\t\t\treturn this.constructor.toString().replace( '$' , '' )\n\t\t}\n\t\t\n\t\t/// NameSpace of element that created when element not found in DOM\n\t\tdom_name_space() { return 'http://www.w3.org/1999/xhtml' }\n\t\t\n\t\t/// Raw child views\n\t\tsub() {\n\t\t\treturn <Array<$mol_view|Node|string|number|boolean>> null\n\t\t}\n\t\t\n\t\t/// Visible sub views with defined context()\n\t\t/// Render all by default\n\t\tsub_visible() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return sub\n\t\t\t\n\t\t\tconst context = this.context_sub()\n\t\t\tsub.forEach( child => {\n\t\t\t\tif( child instanceof $mol_view ) {\n\t\t\t\t\tchild.context( context )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn sub\n\t\t}\n\t\t\n\t\t/// Minimal height that used for lazy rendering\n\t\t@ $mol_mem()\n\t\tminimal_width() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return 0\n\t\t\t\n\t\t\tlet min = 0\n\t\t\tsub.forEach( view => {\n\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\tmin = Math.max( min , view.minimal_width() )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn min\n\t\t}\n\t\t\n\t\t/// Minimal width that used for lazy rendering\n\t\t@ $mol_mem()\n\t\tminimal_height() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return 0\n\t\t\t\n\t\t\tlet min = 0\n\t\t\tsub.forEach( view => {\n\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\tmin = Math.max( min , view.minimal_height() )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn min\n\t\t}\n\t\t\n\t\t'view_classes()' : Function[]\n\t\tview_classes() {\n\t\t\tconst proto = Object.getPrototypeOf( this ) as $mol_view\n\t\t\tif( this[ 'view_classes()' ] ) return this[ 'view_classes()' ]\n\t\t\t\n\t\t\tlet current = proto\n\t\t\tconst classes = [] as Function[]\n\t\t\t\n\t\t\twhile( current ) {\n\t\t\t\tclasses.push( current.constructor )\n\t\t\t\tif(!( current instanceof $mol_view )) break\n\t\t\t\tcurrent = Object.getPrototypeOf( current )\n\t\t\t}\n\t\t\t\n\t\t\treturn this['view_classes()'] = classes\n\t\t}\n\t\t\n\t\t'dom_node()' : Element\n\t\tdom_node() {\n\t\t\tif( this['dom_node()'] ) return this['dom_node()']\n\t\t\t\n\t\t\tconst node = $mol_dom_make( this.toString() , this.dom_name() , this.dom_name_space() )\n\n\t\t\t$mol_dom_render_attributes( node , this.attr_static() )\n\t\t\t$mol_dom_render_events( node , this.event() )\n\t\t\t$mol_dom_render_events_async( node , this.event_async() )\n\n\t\t\treturn this['dom_node()'] = node\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tdom_tree() : Element {\n\t\t\tconst node = this.dom_node()\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tfor( let plugin of this.plugins() ) plugin.render()\n\t\t\t\tthis.render()\n\t\t\t\t\n\t\t\t} catch( error ) {\n\t\t\t\t\n\t\t\t\t$mol_dom_render_attributes( node , { mol_view_error : error.name } )\n\t\t\t\t\n\t\t\t\tif( error instanceof $mol_atom_wait ) return node\n\t\t\t\t\n\t\t\t\ttry { void( ( node as HTMLElement ).innerText = error.message ) } catch( e ) {}\n\t\t\t\t\n\t\t\t\tif( error[ '$mol_atom_catched' ] ) return node\n\t\t\t\t\n\t\t\t\tconsole.error( error )\n\n\t\t\t\terror[ '$mol_atom_catched' ] = true\n\t\t\t}\n\t\t\t\n\t\t\treturn node\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tconst node = this.dom_node()\n\t\t\t\n\t\t\tconst sub = this.sub_visible()\n\t\t\tif( sub ) $mol_dom_render_children( node , sub )\n\t\t\t\n\t\t\t$mol_dom_render_attributes( node , this.attr() )\n\t\t\t$mol_dom_render_styles( node , this.style() )\n\t\t\t$mol_dom_render_fields( node , this.field() )\n\t\t}\n\t\t\n\t\tattr_static() : { [ key : string ] : string|number|boolean } {\n\t\t\tlet attrs = { 'mol_view_error' : false } as any\n\t\t\t\n\t\t\t/// Set BEM-like element-attributes with inheritance support\n\t\t\tconst owner = this.object_owner()\n\t\t\tif( owner instanceof $mol_view ) {\n\t\t\t\tconst suffix = this.object_field().replace( /\\(.*/ , '' )\n\t\t\t\tconst suffix2 = '_' + suffix[0].toLowerCase() + suffix.substring(1)\n\t\t\t\towner.view_classes().forEach( Class => {\n\t\t\t\t\tif( suffix in Class.prototype ) {\n\t\t\t\t\t\tconst attrName = Class.toString().replace( /\\$/g , '' ) + suffix2\n\t\t\t\t\t\tattrs[ attrName ] = ''\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\t/// Set BEM-like block-attributes with inheritance support\n\t\t\tthis.view_classes().forEach( Class => {\n\t\t\t\tattrs[ Class.toString().replace( /\\$/g , '' ).toLowerCase() ] = ''\n\t\t\t} )\n\t\t\t\n\t\t\treturn attrs\n\t\t}\n\t\t\n\t\tattr() : { [ key : string ] : string|number|boolean } {\n\t\t\treturn {\n\t\t\t\t'mol_view_error' : false ,\n\t\t\t}\n\t\t}\n\t\t\n\t\tstyle() : { [ key : string ] : string|number } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tfield() : { [ key : string ] : any } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tevent() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tevent_async() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\t'locale_contexts()' : string[]\n\t\tlocale_contexts() {\n\t\t\treturn this['locale_contexts()'] || ( this[ 'locale_contexts()' ] = this.view_classes().map( String ) )\n\t\t}\n\t\t\n\t\tplugins() {\n\t\t\treturn [] as $mol_view[]\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_view_selection extends $mol_object {\n\t\t\n\t\t@ $mol_mem()\n\t\tstatic focused( next? : Element[] , force? : $mol_atom_force ) {\n\t\t\tif( next === undefined ) return [] as Element[]\n\t\t\t\n\t\t\tif( next.length !== 1 ) throw new Error( 'Length must be equals 1' )\n\t\t\t\n\t\t\tconst node = next[ 0 ] as HTMLElement\n\t\t\t\n\t\t\tsetTimeout( ()=> node.focus() )\n\t\t\t\n\t\t\treturn []\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tstatic position( ...diff : any[] ) {\n\t\t\tif( diff.length ) {\n\t\t\t\tif( !diff[ 0 ] ) return diff[ 0 ]\n\t\t\t\t\n\t\t\t\tvar start = diff[ 0 ].start\n\t\t\t\tvar end = diff[ 0 ].end\n\t\t\t\tif( !( start <= end ) ) throw new Error( `Wrong offsets (${start},${end})` )\n\t\t\t\t\n\t\t\t\tvar root = $mol_dom_context.document.getElementById( diff[ 0 ].id )\n\t\t\t\troot.focus()\n\t\t\t\t\n\t\t\t\tvar range = new Range\n\t\t\t\t\n\t\t\t\tvar cur = root.firstChild\n\t\t\t\twhile( cur !== root ) {\n\t\t\t\t\twhile( cur.firstChild ) cur = cur.firstChild\n\t\t\t\t\tif( cur.nodeValue ) {\n\t\t\t\t\t\tvar length = cur.nodeValue.length\n\t\t\t\t\t\tif( length >= start )  break\n\t\t\t\t\t\tstart -= length\n\t\t\t\t\t}\n\t\t\t\t\twhile( !cur.nextSibling ) {\n\t\t\t\t\t\tcur = cur.parentNode\n\t\t\t\t\t\tif( cur === root ) {\n\t\t\t\t\t\t\tstart = root.childNodes.length\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trange.setStart( cur , start )\n\t\t\t\t\n\t\t\t\tvar cur = root.firstChild\n\t\t\t\twhile( cur !== root ) {\n\t\t\t\t\twhile( cur.firstChild ) cur = cur.firstChild\n\t\t\t\t\tif( cur.nodeValue ) {\n\t\t\t\t\t\tvar length = cur.nodeValue.length\n\t\t\t\t\t\tif( length >= end )  break\n\t\t\t\t\t\tend -= length\n\t\t\t\t\t}\n\t\t\t\t\twhile( !cur.nextSibling ) {\n\t\t\t\t\t\tcur = cur.parentNode\n\t\t\t\t\t\tif( cur === root ) {\n\t\t\t\t\t\t\tend = root.childNodes.length\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trange.setEnd( cur , end )\n\t\t\t\t\n\t\t\t\tvar sel = $mol_dom_context.document.getSelection()\n\t\t\t\tsel.removeAllRanges()\n\t\t\t\tsel.addRange( range )\n\t\t\t\t\n\t\t\t\treturn diff[ 0 ]\n\t\t\t} else {\n\t\t\t\tvar sel = $mol_dom_context.document.getSelection()\n\t\t\t\tif( sel.rangeCount === 0 ) return null\n\t\t\t\tvar range = sel.getRangeAt( 0 )\n\t\t\t\t\n\t\t\t\tvar el = <Element> range.commonAncestorContainer\n\t\t\t\twhile( el && !el.id ) el = el.parentElement\n\t\t\t\t\n\t\t\t\tif( !el ) return { id : null , start : 0 , end : 0 }\n\t\t\t\t\n\t\t\t\tvar meter = new Range\n\t\t\t\tmeter.selectNodeContents( el )\n\t\t\t\t\n\t\t\t\tmeter.setEnd( range.startContainer , range.startOffset )\n\t\t\t\tvar startOffset = meter.toString().length\n\t\t\t\t\n\t\t\t\tmeter.setEnd( range.endContainer , range.endOffset )\n\t\t\t\tvar endOffset = meter.toString().length\n\t\t\t\t\n\t\t\t\treturn { id : el.id , start : startOffset , end : endOffset }\n\t\t\t}\n\t\t}\n\t\t\n\t\tstatic onFocus( event : FocusEvent ) {\n\t\t\tconst parents : Element[] = []\n\t\t\tlet element = event.target as HTMLElement\n\t\t\t\n\t\t\twhile( element ) {\n\t\t\t\tparents.push( element )\n\t\t\t\telement = element.parentNode as HTMLElement\n\t\t\t}\n\t\t\t\n\t\t\t$mol_view_selection.focused( parents , $mol_atom_force )\n\t\t}\n\t\t\n\t\tstatic onBlur( event : FocusEvent ) {\n\t\t\tconst focused = this.focused()\n\t\t\tsetTimeout( ()=> {\n\t\t\t\tif( focused !== this.focused() ) return\n\t\t\t\tthis.focused( [] , $mol_atom_force )\n\t\t\t} )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'local get set delete'() {\n\t\t\t\t\t\n\t\t\tvar key = '$mol_state_local_test:' + Math.random()\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t\t\n\t\t\t$mol_state_local.value( key , 123 )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , 123 )\n\t\t\t\n\t\t\t$mol_state_local.value( key , null )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\texport class $mol_state_local< Value > extends $mol_object {\n\t\t\n\t\tstatic 'native()' : Pick< Storage , 'getItem'|'setItem'|'removeItem' >\n\t\tstatic native() {\n\t\t\tif( this['native()'] ) return this['native()']\n\n\t\t\tcheck : try {\n\t\t\t\tconst native = $mol_dom_context.localStorage\n\t\t\t\tif( !native ) break check\n\t\t\t\t\n\t\t\t\tnative.setItem( '' , '' )\n\t\t\t\tnative.removeItem( '' )\n\t\t\t\treturn this['native()'] = native\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.warn( error )\n\t\t\t}\n\n\t\t\treturn this['native()'] = {\n\t\t\t\tgetItem( key : string ) {\n\t\t\t\t\treturn this[ ':' + key ]\n\t\t\t\t} ,\n\t\t\t\tsetItem( key : string , value : string ) {\n\t\t\t\t\tthis[ ':' + key ] = value\n\t\t\t\t} ,\n\t\t\t\tremoveItem( key : string ) {\n\t\t\t\t\tthis[ ':' + key ] = void 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t@ $mol_mem_key()\n\t\tstatic value< Value >( key : string , next? : Value , force? : $mol_atom_force ) : Value {\n\t\t\tif( next === void 0 ) return JSON.parse( this.native().getItem( key ) || 'null' )\n\t\t\t\n\t\t\tif( next === null ) this.native().removeItem( key )\n\t\t\telse this.native().setItem( key , JSON.stringify( next ) )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tprefix() { return '' }\n\t\t\n\t\tvalue( key : string , next? : Value ) {\n\t\t\treturn $mol_state_local.value( this.prefix() + '.' + key , next )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport interface $mol_locale_dict {\n\t\t[ key : string ] : string\n\t}\n\t\n\texport class $mol_locale extends $mol_object {\n\t\t\n\t\t@ $mol_mem()\n\t\tstatic lang_default() {\n\t\t\treturn 'en'\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tstatic lang( next? : string ) {\n\t\t\treturn $mol_state_local.value( 'locale' , next ) || $mol_dom_context.navigator.language.replace( /-.*/ , '' ) || this.lang_default()\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tstatic source( lang : string ) {\n\t\t\treturn JSON.parse( $mol_file.relative( `-/web.locale=${ lang }.json` ).content() )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tstatic texts( next? : $mol_locale_dict ) : $mol_locale_dict {\n\t\t\tif( next ) return next\n\t\t\t\n\t\t\tconst lang = this.lang()\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn this.source( lang ).valueOf()\n\t\t\t} catch( error ) {\n\t\t\t\tconst def = this.lang_default()\n\t\t\t\tif( lang === def ) throw error\n\t\t\t\treturn this.source( def )\n\t\t\t}\n\t\t}\n\t\t\n\t\tstatic text( contexts : string[] , key : string ) {\n\t\t\tconst texts = this.texts()\n\t\t\t\n\t\t\tfor( let i = 0 ; i < contexts.length ; ++i ) {\n\t\t\t\tconst text = texts[ `${ contexts[i] }_${ key }` ]\n\t\t\t\tif( text ) return text\n\t\t\t}\n\t\t\t\n\t\t\tconsole.warn( 'Locale text not found: ' , `(${ contexts.join( '|' ) })_${ key }` )\n\t\t\t\n\t\t\treturn `<${ key }>`\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\nexport function $mol_view_tree2ts( tree : $mol_tree ) {\n\t\n\tvar content = ''\n\tvar locales : { [ key : string ] : string } = {}\n\t\n\tfunction error( message : string , tree : $mol_tree ) {\n\t\treturn new Error( `${message}:\\n${source( tree )} ${tree.baseUri}:${tree.row}:${tree.col}` )\n\t}\n\t\n\tfunction source( root : $mol_tree ) : $mol_tree {\n\t\tif( [ '<=>', '<=', '=>' ].indexOf( root.type ) !== -1 ) {\n\t\t\treturn root.clone({\n\t\t\t\tsub : root.sub.map( name => name.clone({\n\t\t\t\t\tsub : []\n\t\t\t\t}) )\n\t\t\t})\n\t\t}\n\t\treturn root.clone({ sub : root.sub.map( source ) })\n\t}\n\t\n\ttree.sub.forEach( function( def : $mol_tree ) {\n\t\tif( !def.type || /^-$/.test( def.type ) ) return\n\t\tif( !/^\\$\\w+$/.test( def.type ) ) throw error( 'Wrong component name' , def )\n\t\tvar parent = def.sub[0]\n\t\t\n\t\tvar propDefs : { [ key : string ] : $mol_tree } = {}\n\t\tvar members : { [ key : string ] : string } = {}\n\t\tparent.sub.forEach( param => addProp( param ) )\n\t\t\n\t\tfunction addProp( param : $mol_tree ) { try {\n\t\t\tvar needSet = false\n\t\t\tvar needReturn = true\n\t\t\tvar needCache = false\n\t\t\tvar keys : string[] = []\n\n\t\t\tif( param.type === '<=>' ) {\n\t\t\t\tparam = param.sub[0]\n\t\t\t}\n\n\t\t\tif( param.type === '<=' ) {\n\t\t\t\tparam = param.sub[0]\n\t\t\t}\n\t\t\t\n\t\t\tvar propName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( param.type )\n\t\t\t\n\t\t\tif( propName[3] ) {\n\t\t\t\tneedSet = true\n\t\t\t\tneedCache = true\n\t\t\t}\n\t\t\t\n\t\t\tif( !param.type || param.type === '-' ) return\n\t\t\t\n\t\t\tfunction getValue( value : $mol_tree ) { try {\n\t\t\t\tswitch( true ) {\n\t\t\t\t\tcase( value.type === '' ) :\n\t\t\t\t\t\treturn JSON.stringify( value.value )\n\t\t\t\t\tcase( value.type === '@' ) :\n\t\t\t\t\t\tlocales[ `${ def.type }_${ param.type }` ] = value.value\n\t\t\t\t\t\treturn`$mol_locale.text( this.locale_contexts() , ${ JSON.stringify( param.type ) } )`\n\t\t\t\t\tcase( value.type === '-' ) :\n\t\t\t\t\t\treturn null\n\t\t\t\t\tcase( value.type === '/' ) :\n\t\t\t\t\t\tvar items : string[] = []\n\t\t\t\t\t\tvalue.sub.forEach( item => {\n\t\t\t\t\t\t\tif( item.type === '-' ) return\n\t\t\t\t\t\t\tif( item.type === '^' ) {\n\t\t\t\t\t\t\t\titems.push( `...super.${ param.type }()` )\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar val = getValue( item )\n\t\t\t\t\t\t\tif( val ) items.push( val )\n\t\t\t\t\t\t} )\n\t\t\t\t\t\treturn '[]' + ( items.length ? '.concat( ' + items.join(' , ') + ' )' : ' as any[]' )\n\t\t\t\t\tcase( value.type[0] === '$' ) :\n\t\t\t\t\t\tneedCache = true\n\t\t\t\t\t\tvar overs : string[] = []\n\t\t\t\t\t\tvalue.sub.forEach( over => {\n\t\t\t\t\t\t\tif( /^-?$/.test( over.type ) ) return ''\n\t\t\t\t\t\t\tvar overName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.type )\n\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( over.sub[0].type === '=>' ) {\n\t\t\t\t\t\t\t\tif( over.sub[0].sub.length === 1 ) {\n\t\t\t\t\t\t\t\t\tconst method_name = over.sub[0].sub[0].type\n\t\t\t\t\t\t\t\t\tmembers[ method_name ] = `\\t${ method_name }(){\\n\\t\\treturn this.${ param.type }().${ over.type }()\\n\\t}\\n\\n`\n\t\t\t\t\t\t\t\t \treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar v = getValue( over.sub[0] )\n\t\t\t\t\t\t\tlet args : string[] = []\n\t\t\t\t\t\t\tif( overName[2] ) args.push( ` ${ overName[2] } : any ` )\n\t\t\t\t\t\t\tif( overName[3] ) args.push( ` ${ overName[3] }? : any ` )\n\t\t\t\t\t\t\tovers.push( '\\t\\t\\tobj.' + overName[1] + ' = (' + args.join( ',' ) + ') => ' + v + '\\n' )\n\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t} )\n\t\t\t\t\t\treturn '(( obj )=>{\\n' + overs.join( '' ) + '\\t\\t\\treturn obj\\n\\t\\t})( new ' + value.type + ' )'\n\t\t\t\t\tcase( value.type === '*' ) :\n\t\t\t\t\t\t//needReturn = false\n\t\t\t\t\t\tvar opts : string[] = []\n\t\t\t\t\t\tvalue.sub.forEach( opt => {\n\t\t\t\t\t\t\tif( /^-?$/.test( opt.type ) ) return ''\n\t\t\t\t\t\t\tif( opt.type === '^' ) {\n\t\t\t\t\t\t\t\topts.push( `\\t\\t\\t...super.${ param.type }() ,\\n` )\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar key = /(.*?)(?:\\?(\\w+))?$/.exec( opt.type )\n\t\t\t\t\t\t\tkeys.push( key[1] )\n\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\tvar v = getValue( opt.sub[0] )\n\t\t\t\t\t\t\tvar arg = key[2] ? ` ( ${ key[2] }? : any )=> ` : ''\n\t\t\t\t\t\t\topts.push( '\\t\\t\\t\"' + key[1] + '\" : ' + arg + ' ' + v + ' ,\\n' )\n\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t} )\n\t\t\t\t\t\treturn '({\\n' + opts.join( '' ) + '\\t\\t})'\n\t\t\t\t\tcase( value.type === '>' ) :\n\t\t\t\t\t\tthrow new Error( 'Deprecated syntax `>`. Use `<=>` instead.' )\n\t\t\t\t\tcase( value.type === '<=>' ) :\n\t\t\t\t\t\tneedSet = true\n\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\taddProp( value )\n\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))$/.exec( value.sub[0].type )\n\t\t\t\t\t\t\treturn 'this.' + type[1] + '(' + ( type[2] ? type[2] + ' ,' : '' ) + ' ' + type[3] + ' )'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase( value.type === '<' ) :\n\t\t\t\t\t\tthrow new Error( 'Deprecated syntax `<`. Use `<=` instead.' )\n\t\t\t\t\tcase( value.type === '<=' ) :\n\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\taddProp( value )\n\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( value.sub[0].type )\n\t\t\t\t\t\t\treturn 'this.' + type[1] + '(' + (  type[2] ? type[2] : '' ) + ')'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswitch( value.type ) {\n\t\t\t\t\tcase 'true' :\n\t\t\t\t\tcase 'false' :\n\t\t\t\t\t\treturn value.type\n\t\t\t\t\tcase 'null' :\n\t\t\t\t\t\treturn '<any> null'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( Number( value.type ).toString() == value.type ) return value.type\n\t\t\t\t\n\t\t\t\tthrow error( 'Wrong value' , value )\n\t\t\t} catch ( err ) {\n\t\t\t\terr.message += `\\n${value.baseUri}:${value.row}:${value.col}\\n${source( value )}`\n\t\t\t\tthrow err\n\t\t\t} }\n\t\t\t\n\t\t\tif( param.sub.length > 1 ) throw new Error( 'Too more sub' )\n\t\t\tif( param.sub.length < 1 ) throw new Error( 'Need default value (use \"-\" for inherit)' )\n\t\t\t\n\t\t\tparam.sub.forEach( child => {\n\t\t\t\tvar val = getValue( child )\n\t\t\t\tif( !val ) return\n\t\t\t\t\n\t\t\t\tif( propDefs[ propName[1] ] ) {\n\t\t\t\t\tif( propDefs[ propName[1] ].toString() != param.toString() ) {\n\t\t\t\t\t\tthrow new Error( 'Property already defined with another default value' )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpropDefs[ propName[1] ] = param\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar args : string[] = []\n\t\t\t\tif( propName[2] ) args.push( ` ${ propName[2] } : any ` )\n\t\t\t\tif( propName[3] ) args.push( ` ${ propName[3] }? : any , force? : $${''}mol_atom_force ` )\n\t\t\t\tif( needSet && param.sub[0].type !== '<=>' ) val = ( needReturn ? `( ${ propName[3] } !== void 0 ) ? ${ propName[3] } : ` : `if( ${ propName[3] } !== void 0 ) return ${ propName[3] }\\n\\t\\t` ) + val\n\t\t\t\tif( needReturn ) val = 'return ' + val\n\t\t\t\tvar decl = '\\t' + propName[1] +'(' + args.join(',') + ') {\\n\\t\\t' + val + '\\n\\t}\\n\\n'\n\t\t\t\tif( needCache ) {\n\t\t\t\t\tif( propName[2] ) decl = '\\t@ $' + 'mol_mem_key()\\n' + decl\n\t\t\t\t\telse decl = '\\t@ $' + 'mol_mem()\\n' + decl\n\t\t\t\t}\n\t\t\t\tdecl = source( param ).toString().trim().replace( /^/gm , '\\t/// ' ) + '\\n' + decl\n\t\t\t\t\n\t\t\t\tmembers[ propName[1] ] = decl\n\t\t\t} )\n\t\t\t\n\t\t\treturn needSet\n\t\t} catch ( err ) {\n\t\t\terr.message += `\\n${param.baseUri}:${param.row}:${param.col}\\n${source( param )}`\n\t\t\tthrow err\n\t\t} }\n\t\t\n\t\tvar body = Object.keys( members ).map( function( name ) {\n\t\t\treturn members[ name ] || '\\t' + name +'() { return <any> null }\\n\\t}\\n'\n\t\t}).join( '' )\n\t\t\n\t\tvar classes = 'namespace $ { export class ' + def.type + ' extends ' + parent.type + ' {\\n\\n' + body + '} }\\n'\n\t\t\n\t\tcontent += classes + '\\n'\n\t})\n\t\n\treturn { script : content , locales : locales }\n}\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'sorting must cut cycles at low priority edges'() {\n\t\t\tvar graph = new $mol_graph< void , { priority : number } >()\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.sorted( edge => edge.priority ).join( '' ) , 'BADC' )\n\t\t}\n\t\n\t} )\n}\n","namespace $ {\n\t\n\texport class $mol_graph< Node , Edge > {\n\t\t\n\t\tnodes : { [ id : string ] : Node } = {}\n\t\t\n\t\tedgesOut : { [ from : string ] : { [ to : string ] : Edge } } = {}\n\t\tedgesIn : { [ to : string ] : { [ from : string ] : Edge } } = {}\n\t\t\n\t\tnodeEnsure( id : string ) {\n\t\t\tif( this.nodes.hasOwnProperty( id ) ) return\n\t\t\tthis.nodes[ id ] = null\n\t\t}\n\t\t\n\t\tlinkOut( from : string , to : string , edge : Edge ) {\n\t\t\tif( !this.edgesOut[ from ] ) {\n\t\t\t\tthis.edgesOut[ from ] = {}\n\t\t\t\tthis.nodeEnsure( from )\n\t\t\t}\n\t\t\tthis.edgesOut[ from ][ to ] = edge\n\t\t\tthis.nodeEnsure( to )\n\t\t}\n\t\t\n\t\tlinkIn( to : string , from : string , edge : Edge ) {\n\t\t\tif( !this.edgesIn[ to ] ) {\n\t\t\t\tthis.edgesIn[ to ] = {}\n\t\t\t\tthis.nodeEnsure( to )\n\t\t\t}\n\t\t\tthis.edgesIn[ to ][ from ] = edge\n\t\t\tthis.nodeEnsure( from )\n\t\t}\n\t\t\n\t\tedgeOut( from : string , to : string ) {\n\t\t\treturn this.edgesOut[ from ] && this.edgesOut[ from ][ to ]\n\t\t}\n\t\t\n\t\tedgeIn( to : string , from : string ) {\n\t\t\treturn this.edgesIn[ to ] && this.edgesIn[ to ][ from ]\n\t\t}\n\t\t\n\t\tlink( one : string , two : string , edge : Edge ) {\n\t\t\tthis.linkOut( one , two , edge )\n\t\t\tthis.linkIn( two , one , edge )\n\t\t}\n\t\t\n\t\tsorted( getWeight : ( edge : Edge )=> number ) {\n\t\t\tvar pending = Object.keys( this.nodes )\n\t\t\tvar visited : string[] = []\n\t\t\tvar weights : number[] = []\n\t\t\tvar sorted : string[] = []\n\t\t\t\n\t\t\tvar visit = ( id : string , weight : number )=> {\n\t\t\t\t\n\t\t\t\tvar index = visited.lastIndexOf( id )\n\t\t\t\tif( index >= 0 ) {\n\t\t\t\t\tif( index === visited.length - 1 ) return false\n\t\t\t\t\tif( weight <= weights[ index + 1 ] ) return false\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( weight != null ) {\n\t\t\t\t\tvisited.push( id )\n\t\t\t\t\tweights.push( weight )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deps = this.edgesOut[ id ];\n\t\t\t\tfor( var dep in deps ) {\n\t\t\t\t\tif( dep === id ) continue\n\t\t\t\t\tvisit( dep , getWeight( deps[ dep ] ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( sorted.indexOf( id ) !== -1 ) return false\n\t\t\t\t\n\t\t\t\tsorted.push( id )\n\t\t\t\t\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t\n\t\t\tpending.forEach( id => visit( id , null ) )\n\t\t\t\n\t\t\treturn sorted\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport function $mol_exec( dir : string , command : string , ...args : string[] ) {\n\t\t\n\t\tconsole.log( `${dir}> ${command} ${args.join( ' ' )}` )\n\t\t\n\t\tvar res = $node.child_process.spawnSync(\n\t\t\tcommand ,\n\t\t\targs ,\n\t\t\t{ cwd : dir , stdio : [ 'pipe' , process.stdout , 'pipe' ] }\n\t\t)\n\t\t\n\t\tif( res.status ) throw new Error( res.stderr.toString() )\n\t\t\n\t\treturn res\n\t}\n}\n","namespace $ {\n\t\n\texport class $mol_build extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key()\n\t\tstatic root( path : string ) {\n\t\t\treturn this.make({\n\t\t\t\troot : $mol_const( $mol_file.absolute( path ) ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\tstatic relative( path : string ) {\n\t\t\treturn $mol_build.root( $mol_file.relative( path ).path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tserver() {\n\t\t\treturn $mol_build_server.make({\n\t\t\t\tbuild : $mol_const( this ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\troot() {\n\t\t\treturn $mol_file.relative( '.' )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tmods( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tconst mods : $mol_file[] = []\n\t\t\t\n\t\t\t$mol_file.absolute( path ).sub()\n\t\t\t.forEach(\n\t\t\t\tchild => {\n\t\t\t\t\tconst name = child.name()\n\t\t\t\t\tif( !/^[a-z]/i.test( name ) ) return false\n\t\t\t\t\tif( exclude && RegExp( '[.=](' + exclude.join( '|' ) + ')[.]' , 'i' ).test( name ) ) return false\n\t\t\t\t\t\n\t\t\t\t\tif( /(view\\.tree)$/.test( name ) ) {\n\t\t\t\t\t\tconst script = child.parent().resolve( `-view.tree/${ child.name() }.ts` )\n\t\t\t\t\t\tconst locale = child.parent().resolve( `-view.tree/${ child.name() }.locale.json` )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst tree = $mol_tree.fromString( String( child.content() ) , child.path() )\n\t\t\t\t\t\tconst res = $mol_view_tree2ts( tree )\n\t\t\t\t\t\tscript.content( res.script )\n\t\t\t\t\t\tlocale.content( JSON.stringify( res.locales , null , '\\t' ) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tmods.push( script , locale )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmods.push( child )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t)\n\t\t\t// .sort( ( a , b )=> a.path().length - b.path().length )\n\t\t\t\n\t\t\treturn mods\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tmodsRecursive( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn [ mod ]\n\t\t\t\tcase 'dir' :\n\t\t\t\t\tvar mods = [ mod ]\n\t\t\t\t\tfor( var m of this.mods( { path , exclude } ) ) {\n\t\t\t\t\t\tif( m.type() !== 'dir' ) continue\n\t\t\t\t\t\tfor( var dep of this.modsRecursive( { path : m.path() , exclude } ) ) {\n\t\t\t\t\t\t\tif( mods.indexOf( dep ) !== -1 ) continue\n\t\t\t\t\t\t\tmods.push( dep )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn mods\n\t\t\t\tcase null :\n\t\t\t\t\tthrow new Error( `Module not found: \"${mod.relate()}\"` )\n\t\t\t}\n\t\t\tthrow new Error( `Unsopported type \"${mod.type()}\" of \"${mod.relate()}\"` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsources( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn [ mod ]\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.mods( { path , exclude } ).filter( mod => mod.type() === 'file' )\n\t\t\t\tdefault:\n\t\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsourcesSorted( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst graph = new $mol_graph< void , { priority : number } >()\n\t\t\tconst sources = this.sources( { path , exclude } )\n\t\t\tfor( let src of sources ) {\n\t\t\t\tgraph.nodeEnsure( src.relate( this.root() ) )\n\t\t\t}\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\t\n\t\t\t\t\tvar names : string[]\n\t\t\t\t\tif( p[ 0 ] === '/' ) names = p.substring( 1 ).split( '/' )\n\t\t\t\t\telse names = mod.resolve( p ).relate( this.root() ).split( '/' )\n\t\t\t\t\t\n\t\t\t\t\tlet files = [ this.root() ]\n\t\t\t\t\tfor( let name of names ) {\n\t\t\t\t\t\tlet nextFiles : $mol_file[] = []\n\t\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\t\tlet validName = new RegExp( `^(${file.name()})?${name}(?![a-z0-9])` , 'i' )\n\t\t\t\t\t\t\tfor( let child of this.mods( { path : file.path() , exclude } ) ) {\n\t\t\t\t\t\t\t\tif( !child.name().match( validName ) ) continue\n\t\t\t\t\t\t\t\tnextFiles.push( child )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( nextFiles.length === 0 ) break\n\t\t\t\t\t\tfiles = nextFiles\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\tif( file === this.root() ) continue\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( file.relate( this.root() ) in graph.nodes ) {\n\t\t\t\t\t\t\tgraph.link(\n\t\t\t\t\t\t\t\tsrc.relate( this.root() ) ,\n\t\t\t\t\t\t\t\tfile.relate( this.root() ) ,\n\t\t\t\t\t\t\t\t{ priority : deps[ p ] }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlet next = graph.sorted( edge => edge.priority ).map( name => this.root().resolve( name ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsourcesAll( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst sortedPaths = this.graph( { path , exclude } ).sorted( edge => edge.priority )\n\t\t\t\n\t\t\tlet sources : $mol_file[] = []\n\t\t\tsortedPaths.forEach( path => {\n\t\t\t\tthis.sourcesSorted( { path : this.root().resolve( path ).path() , exclude } ).forEach( src => {\n\t\t\t\t\tif( sources.indexOf( src ) === -1 ) sources.push( src )\n\t\t\t\t} )\n\t\t\t} )\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\ttsOptions() {\n\t\t\tconst rawOptions = JSON.parse( this.root().resolve( 'tsconfig.json' ).content() ).compilerOptions\n\t\t\tconst res = $node['typescript'].convertCompilerOptionsFromJson( rawOptions , \".\" , 'tsconfig.json' )\n\t\t\tif( res.errors.length ) throw res.errors\n\t\t\treturn res.options\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\ttsSource( { path , target } : { path : string , target : number } ) {\n\t\t\tconst content = $mol_file.absolute( path ).content().toString()\n\t\t\treturn $node['typescript'].createSourceFile( path , content , target )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\ttsHost() {\n\n\t\t\tconst host = {\n\t\t\t\t// getScriptFileNames : () => [] ,\n\t\t\t\tgetScriptVersion : ( path : string )=> $mol_file.absolute( path ).version() ,\n\t\t\t\tgetScriptSnapshot : ( path : string )=> $mol_file.absolute( path ).content().toString() ,\n\t\t\t\tgetCurrentDirectory : ()=> this.root().path() ,\n\t\t\t\tgetCompilationSettings : ()=> this.tsOptions() ,\n\t\t\t\tuseCaseSensitiveFileNames : ()=> false ,\n\t\t\t\tgetCanonicalFileName : ( path : string )=> path.toLowerCase() ,\n\t\t\t\tgetDefaultLibFileName : ( options : any )=> $node['typescript'].getDefaultLibFilePath( options ) ,\n\t\t\t\tgetCommonSourceDirectory : ()=> this.root().path() ,\n\t\t\t\tgetNewLine : ()=> '\\n' ,\n\t\t\t\tgetSourceFile : ( path : string , target : any , fail : any )=> {\n\t\t\t\t\treturn this.tsSource({ path , target })\n\t\t\t\t} ,\n\t\t\t\tfileExists : ( path : string )=> {\n\t\t\t\t\treturn $mol_file.absolute( path ).exists()\n\t\t\t\t} ,\n\t\t\t\twriteFile : ( path : string , content : string )=> {\n\t\t\t\t\t$mol_file.absolute( path ).content( content , $mol_atom_force )\n\t\t\t\t} ,\n\t\t\t}\n\t\t\t\n\t\t\treturn host\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsourcesJS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t.filter( src => /(js|tsx?)$/.test( src.ext() ) )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tvar sourcesTS : $mol_file[] = []\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => {\n\t\t\t\t\tif( !/tsx?$/.test( src.ext() ) ) return src\n\t\t\t\t\t\n\t\t\t\t\tsourcesTS.push( src )\n\t\t\t\t\treturn src.parent().resolve( src.name().replace( /\\.tsx?$/ , '.js' ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tif( sourcesTS.length ) {\n\t\t\t\t\n\t\t\t\tvar host = this.tsHost()\n\t\t\t\tvar options = host.getCompilationSettings()\n\t\t\t\t\n\t\t\t\tvar program = $node['typescript'].createProgram( sourcesTS.map( src => src.path() ) , options , host )\n\t\t\t\tvar result = program.emit()\n\t\t\t\t\n\t\t\t\tvar errors : any[] = $node['typescript'].getPreEmitDiagnostics( program ).concat( result.diagnostics )\n\t\t\t\tvar logs = errors.map(\n\t\t\t\t\terror => {\n\t\t\t\t\t\tvar message = $node['typescript'].flattenDiagnosticMessageText( error.messageText , '\\n' )\n\t\t\t\t\t\tif( !error.file ) return message\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar pos = error.file.getLineAndCharacterOfPosition( error.start )\n\t\t\t\t\t\treturn error.file.fileName + ':' + (pos.line + 1) + ':' + pos.character + '\\n ' + message\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif( logs.length ) throw new Error( '\\n' + logs.join( '\\n' ) )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsourcesDTS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\t\n\t\t\tlet sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tsources = sources.filter( src => /(tsx?)$/.test( src.ext() ) )\n\t\t\t\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => src.parent().resolve( src.name().replace( /(\\.d)?\\.tsx?$/ , '.d.ts' ) )\n\t\t\t)\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsourcesCSS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\treturn this.sourcesAll( { path , exclude } ).filter( src => /(css)$/.test( src.ext() ) )\n\t\t}\n\t\t\n\t\tstatic dependors : { [ index : string ] : ( source : $mol_file )=> { [ index : string ] : number } } = {}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tsrcDeps( path : string ) {\n\t\t\tconst src = $mol_file.absolute( path )\n\t\t\t\n\t\t\tlet ext = src.ext()\n\t\t\tif( !ext ) return {}\n\t\t\t\n\t\t\tlet dependencies \n\t\t\twhile( !dependencies ) {\n\t\t\t\tdependencies = $mol_build.dependors[ ext ]\n\t\t\t\tif( dependencies ) break\n\t\t\t\tvar extShort = ext.replace( /^[^.]*\\./ , '' )\n\t\t\t\tif( ext === extShort ) break\n\t\t\t\text = extShort\n\t\t\t}\n\t\t\t\n\t\t\treturn dependencies ? dependencies( src ) : {}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tmodDeps( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst depends : { [ index : string ] : number } = { '..' : 0 }\n\t\t\tfor( var src of this.sources( { path , exclude } ) ) {\n\t\t\t\t$mol_build_depsMerge( depends , this.srcDeps( src.path() ) )\n\t\t\t}\n\t\t\treturn depends\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tdependencies( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn this.srcDeps( path )\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.modDeps( { path , exclude } )\n\t\t\t\tdefault :\n\t\t\t\t\treturn {}\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tpackEnsure( name : string ) {\n\t\t\tvar mapping = this.packMapping()\n\t\t\t\n\t\t\tvar pack = this.root().resolve( name )\n\t\t\tif( pack.exists() ) {\n\t\t\t\tif( pack.resolve( '.git' ).exists() ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//$mol_exec( pack.path() , 'git' , '--no-pager' , 'fetch' )\n\t\t\t\t\t\t$mol_exec( pack.path() , 'git' , '--no-pager' , 'log' , '--oneline' , 'HEAD..origin/master' )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tconsole.error( error.message )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\t\t\t\n\t\t\tfor( let repo of mapping.select( 'pack' , name , 'git' ).sub ) {\n\t\t\t\t$mol_exec( this.root().path() , 'git' , 'clone' , repo.value , name )\n\t\t\t\tpack.stat( undefined , $mol_atom_force )\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error( `Package \"${name}\" not found` )\n\t\t}\n\t\t\n\t\tmodEnsure( path : string ) {\n\t\t\tvar file = $mol_file.absolute( path )\n\t\t\tvar sub = file.relate( this.root() )\n\t\t\tvar name = sub.replace( /\\/.*$/ , '' )\n\t\t\t\n\t\t\treturn this.packEnsure( name )\n\t\t}\n\t\t\n\t\t@ $mol_mem()\n\t\tpackMapping() {\n\t\t\tconst file = $mol_file.relative( '.pms.tree' )\n\t\t\treturn $mol_tree.fromString( file.content() , file.path() )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tgraph( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tlet graph = new $mol_graph< null , { priority : number } >()\n\t\t\tlet added : { [ path : string ] : boolean } = {}\n\t\t\t\n\t\t\tvar addMod = ( mod : $mol_file )=> {\n\t\t\t\tif( added[ mod.path() ] ) return\n\t\t\t\tadded[ mod.path() ] = true\n\t\t\t\t\n\t\t\t\tgraph.nodes[ mod.relate( this.root() ) ] = null\n\t\t\t\t\n\t\t\t\tconst checkDep = ( p : string )=> {\n\t\t\t\t\t\n\t\t\t\t\tvar dep = ( p[ 0 ] === '/' ) ? this.root().resolve( p ) : mod.resolve( p )\n\t\t\t\t\tthis.modEnsure( dep.path() )\n\t\t\t\t\t\n\t\t\t\t\twhile( !dep.exists() ) dep = dep.parent()\n\t\t\t\t\t\n\t\t\t\t\tif( dep.type() === 'dir' ) {\n\t\t\t\t\t\tlet index = dep.resolve( 'index.js' )\n\t\t\t\t\t\tif( index.exists() ) dep = index\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//if( dep.type() === 'file' ) dep = dep.parent()\n\t\t\t\t\tif( mod === dep ) return\n\t\t\t\t\tif( dep === this.root() ) return\n\t\t\t\t\t\n\t\t\t\t\tgraph.link( mod.relate( this.root() ) , dep.relate( this.root() ) , { priority : deps[ p ] } )\n\t\t\t\t\t\n\t\t\t\t\taddMod( dep )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet deps = this.dependencies( { path : mod.path() , exclude } )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\tcheckDep( p )\n\t\t\t\t\tconst p2 = p.replace( /^\\/node\\// , '/node_modules/' )\n\t\t\t\t\tif( p2 !== p ) checkDep( p2 )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.modEnsure( path )\n\t\t\tthis.modsRecursive( { path , exclude } ).forEach( mod => addMod( mod ) )\n\t\t\t\n\t\t\treturn graph\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundle( { path , bundle } : { path : string , bundle? : string } ) {\n\t\t\t\n\t\t\tbundle = bundle && bundle.replace( /\\.map$/ , '' )\n\t\t\t\n\t\t\tvar envsDef = [ 'web' , 'node' ]\n\t\t\tvar envs = bundle ? [] as string[] : envsDef.slice()\n\t\t\tvar stages = [ 'test' , 'dev' ]\n\t\t\t\n\t\t\tif( bundle ) {\n\t\t\t\tvar [ bundle , tags , type , locale ] = /^(.*?)(?:\\.(test\\.js|js|css|deps\\.json|locale(?:=(.*))?\\.json))?$/.exec(\n\t\t\t\t\tbundle\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\ttags.split( '.' ).forEach(\n\t\t\t\t\ttag => {\n\t\t\t\t\t\tif( envsDef.indexOf( tag ) !== -1 ) envs = [ tag ]\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tvar res : $mol_file[] = []\n\t\t\t\n\t\t\tenvs.forEach(\n\t\t\t\tenv => {\n\t\t\t\t\tvar exclude = envsDef.filter( e => e !== env ).concat( stages )\n\t\t\t\t\t\n\t\t\t\t\tif( !type || type === 'deps.json' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDepsJSON( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'css' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleCSS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'js' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleJS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'test.js' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleTestJS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'd.ts' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDTS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || /^locale(?:=\\w+)?.json$/.test( type ) ) {\n\t\t\t\t\t\tres = res.concat(\n\t\t\t\t\t\t\tthis.bundleLocale(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpath ,\n\t\t\t\t\t\t\t\t\texclude ,\n\t\t\t\t\t\t\t\t\tbundle : env\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tif( !bundle || bundle === 'package.json' ) {\n\t\t\t\tres = res.concat( this.bundlePackageJSON( { path , exclude : [ 'web' ] } ) )\n\t\t\t}\n\t\t\t\n\t\t\tres = res.concat( this.bundleFiles( { path , exclude : [ 'node' ] } ) )\n\t\t\t\n\t\t\tres = res.concat( this.bundleCordova( { path , exclude : [ 'node' ] } ) )\n\n\t\t\treturn res.map( r => r.valueOf() )\n\t\t}\n\t\t\n\t\tlogBundle( target : $mol_file ) {\n\t\t\tvar time = new Date().toLocaleTimeString()\n\t\t\tvar path = target.relate( this.root() )\n\t\t\tconsole.log( `${time} Built ${path}` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleJS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.js.map` )\n\t\t\t\n\t\t\tvar sources = this.sourcesJS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() , '\\n;\\n' )\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( '' , 'require( \"source-map-support\" ).install(); var exports = void 0;\\n' )\n\t\t\t}\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\t( src )=> {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( this.root() ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar content = src.content().toString().replace( /^\\/\\/#\\ssourceMappingURL=/mg , '//' )\n\t\t\t\t\t\n\t\t\t\t\tvar srcMap = src.parent().resolve( src.name() + '.map' ).content()\n\t\t\t\t\tif( srcMap ) {\n\t\t\t\t\t\tvar map = JSON.parse( srcMap )\n\t\t\t\t\t\tmap.sourceRoot = src.parent().relate( target.parent() )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst isCommonJs = /module\\.exports/.test( content )\n\t\t\t\t\t\n\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\tconcater.add( '-' , '\\nvar $node = $node || {}\\nvoid function( module ) { var exports = module'+'.exports; function require( id ) { return $node[ id ] }; \\n' )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content , map && JSON.stringify( map ) )\n\t\t\t\t\t\n\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\tconst idFull = src.relate( this.root().resolve( 'node_modules' ) )\n\t\t\t\t\t\tconst idShort = idFull.replace( /\\/index\\.js$/ , '' )\n\t\t\t\t\t\tconcater.add( '-' , `\\n$${''}node[ \"${ idShort }\" ] = $${''}node[ \"${ idFull }\" ] = module.${''}exports }( { exports : {} } )\\n` )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.content( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() ) )\n\t\t\ttargetMap.content( concater.sourceMap )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleTestJS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar root = this.root()\n\t\t\tvar target = pack.resolve( `-/${bundle}.test.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.test.js.map` )\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() , '\\n;\\n' )\n\t\t\t\n\t\t\tvar sources = this.sourcesJS( { path , exclude : exclude.filter( ex => ex !== 'test' && ex !== 'dev' ) } )\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( '' , 'require( \"source-map-support\" ).install()\\n' )\n\t\t\t} else {\n\t\t\t\tvar sourcesNoTest = this.sourcesJS( { path , exclude } )\n\t\t\t\tsources = sources.filter( src => sourcesNoTest.indexOf( src ) === -1 )\n\t\t\t}\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tfunction( src ) {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( root ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar content = src.content().toString().replace( /^\\/\\/#\\ssourceMappingURL=/mg , '//' )\n\t\t\t\t\t\n\t\t\t\t\tvar srcMap = src.parent().resolve( src.name() + '.map' ).content()\n\t\t\t\t\tif( srcMap ) {\n\t\t\t\t\t\tvar map = JSON.parse( srcMap )\n\t\t\t\t\t\tmap.sourceRoot = src.parent().relate( target.parent() )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content , map && JSON.stringify( map ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.content( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() ) )\n\t\t\ttargetMap.content( concater.sourceMap )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleDTS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.d.ts` )\n\t\t\t\n\t\t\tvar sources = this.sourcesDTS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tvar concater = new $node[ 'concat-with-sourcemaps' ]( true , target.name() )\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tfunction( src ) {\n\t\t\t\t\tvar content = src.content().toString()\n\t\t\t\t\tconcater.add( src.relate( target.parent() ) , content )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.content( concater.content )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundlePackageJSON( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/package.json` )\n\t\t\tvar targetMap = pack.resolve( `-/package.json` )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll( { path , exclude : exclude.filter( ex => ex !== 'test' && ex !== 'dev' ) } )\n\t\t\t\n\t\t\tvar json = {\n\t\t\t\tname : pack.relate( this.root() ).replace( /\\//g , '_' ) ,\n\t\t\t\tversion : '0.0.0' ,\n\t\t\t\tmain : 'node.js' ,\n\t\t\t\tdependencies : <{ [ key : string ] : string }>{}\n\t\t\t}\n\t\t\t\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let dep in deps ) {\n\t\t\t\t\tif( !/^\\/node(?:_modules)?\\//.test( dep ) ) continue\n\t\t\t\t\tlet mod = dep.replace( /^\\/node(?:_modules)?\\// , '' ).replace( /\\/.*/g , '' )\n\t\t\t\t\tjson.dependencies[ mod ] = `*`\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\ttarget.content( JSON.stringify( json , null , '  ' ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleFiles( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst root = this.root()\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t.filter( src => /meta.tree$/.test( src.ext() ) )\n\t\t\t\n\t\t\tif( sources.length === 0 ) return [] \n\t\t\t\n\t\t\tconst targets : $mol_file[] = []\n\t\t\t\n\t\t\tsources.forEach( source => {\n\t\t\t\tconst tree = $mol_tree.fromString( source.content() , source.path() )\n\t\t\t\t\n\t\t\t\ttree.select( 'deploy' ).sub.forEach( deploy => {\n\t\t\t\t\tconst file = root.resolve( deploy.value.replace( /^\\// , '' ) )\n\t\t\t\t\tconst target = pack.resolve( `-/${ file.relate( root ) }` )\n\t\t\t\t\ttarget.content( file.content() )\n\t\t\t\t\ttargets.push( target )\n\t\t\t\t\tthis.logBundle( target )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleCordova( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tconst cordova = pack.resolve( '-cordova' )\n\t\t\t\n\t\t\tconst config = pack.resolve( 'config.xml' )\n\t\t\tif( !config.exists() ) return []\n\t\t\t\n\t\t\tconst config_target = cordova.resolve( 'config.xml' )\n\t\t\tconfig_target.content( config.content() )\n\t\t\t\n\t\t\tconst html = pack.resolve( 'index.html' )\n\t\t\tconst html_target = cordova.resolve( 'www/index.html' )\n\t\t\thtml_target.content( html.content() )\n\t\t\t\n\t\t\tconst sources = pack.resolve( '-' ).find().filter( src => src.type() === 'file' )\n\t\t\t\n\t\t\tconst targets = [ config_target , html_target ]\n\t\t\t.concat( sources.map( source => {\n\t\t\t\tconst target = cordova.resolve( `www/${ source.relate( pack ) }` )\n\t\t\t\ttarget.content( source.content() )\n\t\t\t\treturn target\n\t\t\t} ) )\n\t\t\t\n\t\t\tthis.logBundle( cordova )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleCSS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tif( bundle === 'node' ) return []\n\t\t\t\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\tvar sources = this.sourcesCSS( { path , exclude } )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.css` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.css.map` )\n\t\t\t\n\t\t\tvar root : any = null //$node['postcss'].root({})\n\t\t\tsources.forEach(\n\t\t\t\tsrc => {\n\t\t\t\t\tvar root2 = $node['postcss'].parse( src.content() , { from : src.path() } )\n\t\t\t\t\troot = root ? root.append( root2 ) : root2\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tvar cssnext = $node[ 'postcss-cssnext' ]\n\t\t\tvar processor = $node['postcss'](\n\t\t\t\tcssnext(\n\t\t\t\t\tnull , {\n\t\t\t\t\t\tfeatures : {\n\t\t\t\t\t\t\tcustomProperties : {\n\t\t\t\t\t\t\t\tpreserve : true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t).plugins\n\t\t\t)\n\t\t\tvar result = processor.process( root , { to : target.relate() , map : { inline : false } } )\n\t\t\t\n\t\t\ttarget.content( result.css )\n\t\t\ttargetMap.content( JSON.stringify( result.map , null , '\\t' ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleLocale( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst sources = this.sourcesAll( { path , exclude } ).filter( src => /(locale(?:=\\w+)?\\.json)$/.test( src.name() ) )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tconst locales : { [ key : string ] : { [ key : string ] : string } } = { 'en' : {} }\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tsrc => {\n\t\t\t\t\tconst [ ext , lang = '' ] = /locale(?:=(\\w+))?\\.json$/.exec( src.name() )\n\t\t\t\t\t\n\t\t\t\t\tif( !locales[ lang ] ) locales[ lang ] = {}\n\t\t\t\t\t\n\t\t\t\t\tconst loc = JSON.parse( src.content() )\n\t\t\t\t\tfor( let key in loc ) {\n\t\t\t\t\t\tlocales[ lang ][ key ] = loc[ key ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tconst targets = Object.keys( locales ).map( lang => {\n\t\t\t\tconst ext = lang ? `locale=${ lang }.json` : `locale.json`\n\t\t\t\tconst target = pack.resolve( `-/${bundle}.${ ext }` )\n\t\t\t\t\n\t\t\t\tconst locale = locales[ lang ]\n\t\t\t\tif( locales[''] ) {\n\t\t\t\t\tfor( let key in locales[''] ) {\n\t\t\t\t\t\tif( locale[ key ] ) continue\n\t\t\t\t\t\tlocale[ key ] = locales[''][ key ] \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttarget.content( JSON.stringify( locales[ lang ] , null , '\\t' ) )\n\t\t\t\t\n\t\t\t\tthis.logBundle( target )\n\t\t\t\t\n\t\t\t\treturn target\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key()\n\t\tbundleDepsJSON( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar list = this.sourcesAll( { path , exclude } )\n\t\t\tif( !list.length ) return []\n\t\t\t\n\t\t\tvar graph = this.graph( { path , exclude } )\n\t\t\t\n\t\t\tvar deps : any = {}\n\t\t\tfor( let dep in graph.nodes ) {\n\t\t\t\tdeps[ dep ] = this.dependencies( { path : this.root().resolve( dep ).path() , exclude } )\n\t\t\t}\n\t\t\t\n\t\t\tvar data = {\n\t\t\t\tfiles : list.map( src => src.relate( this.root() ) ) ,\n\t\t\t\tedgesIn : graph.edgesIn ,\n\t\t\t\tedgesOut : graph.edgesOut ,\n\t\t\t\tdeps\n\t\t\t}\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.deps.json` )\n\t\t\ttarget.content( JSON.stringify( data ) )\n\t\t\t\n\t\t\tthis.logBundle( target )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t}\n\t\n\tfunction $mol_build_depsMerge(\n\t\ttarget : { [ index : string ] : number } ,\n\t\tsource : { [ index : string ] : number }\n\t) : { [ index : string ] : number } {\n\t\tfor( var path in source ) {\n\t\t\tif( target[ path ] >= source[ path ] ) continue\n\t\t\ttarget[ path ] = source[ path ]\n\t\t}\n\t\treturn target\n\t}\n\t\n\t$mol_build.dependors[ 'ts' ] = $mol_build.dependors[ 'tsx' ] = $mol_build.dependors[ 'jam.js' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tif( /[jt]sx$/.test( source.ext() ) ) {\n\t\t\tdepends[ '/mol/dom/jsx' ] = 0\n\t\t}\n\t\t\n\t\tvar lines = String( source.content() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/\\$(([a-z][a-z0-9]+)(?:[._][a-z0-9]+|\\[\\s*['\"](?:[^\\/]*?)['\"]\\s*\\])*)/ig , ( str , name , pack )=> {\n\t\t\t\t\t\tif( pack === 'node' ) return str\n\t\t\t\t\t\t\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/' + name.replace( /[_.\\[\\]'\"]+/g , '/' ) ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/\\$node\\[\\s*['\"](.*?)['\"]\\s*\\]/ig , ( str , path )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/node/' + path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/require\\(\\s*['\"](.*?)['\"]\\s*\\)/ig , ( str , path )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'view.ts' ] = source => {\n\t\tvar treeName = source.name().replace( /ts$/ , 'tree' )\n\t\tvar depends : { [ index : string ] : number } = { [ treeName ] : 0 }\n\t\t$mol_build_depsMerge( depends , $mol_build.dependors[ 'ts' ]( source ) )\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'css' ] = $mol_build.dependors[ 'view.css' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.content() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/(?:--|[\\[\\.#])([a-z][a-z0-9]+(?:[-_][a-z0-9]+)+)/ig , ( str , name )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/' + name.replace( /[._-]/g , '/' ) ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'meta.tree' ] = source => {\n\t\tconst depends : { [ index : string ] : number } = {}\n\t\t\n\t\tconst tree = $mol_tree.fromString( source.content() , source.path() )\n\t\t\n\t\ttree.select( 'require' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.value ] = 0\n\t\t} )\n\t\t\n\t\ttree.select( 'include' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.toString() ] = Number.NEGATIVE_INFINITY\n\t\t} )\n\t\t\n\t\treturn depends\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_server extends $mol_object {\n\t\t\n\t\t@ $mol_mem()\n\t\texpress() {\n\t\t\tvar express = $node['express']()\n\t\t\t\n\t\t\tthis.expressHandlers().forEach( plugin => express.use( plugin ) )\n\t\t\t\n\t\t\t$node['portastic'].find(\n\t\t\t\t{\n\t\t\t\t\tmin : this.port() ,\n\t\t\t\t\tmax : this.port() + 1000 ,\n\t\t\t\t\tretrieve : 1\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t( ports : number[] ) => {\n\t\t\t\t\texpress.listen( ports[ 0 ] )\n\t\t\t\t\tconsole.log( this.messageStart( ports[ 0 ] ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn express\n\t\t}\n\t\t\n\t\tmessageStart( port : number ) {\n\t\t\treturn `${ this } started at http://127.0.0.1:${ port }/`\n\t\t}\n\t\t\n\t\texpressHandlers() : any[] {\n\t\t\treturn [].concat.apply(\n\t\t\t\t[] , [\n\t\t\t\t\tthis.expressCompressor() ,\n\t\t\t\t\tthis.expressBodier() ,\n\t\t\t\t\tthis.expressGenerator() ,\n\t\t\t\t\tthis.expressFiler() ,\n\t\t\t\t\tthis.expressDirector() ,\n\t\t\t\t]\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressCompressor() {\n\t\t\treturn $node['compression']()\n\t\t}\n\t\t\n\t\texpressBodier() {\n\t\t\treturn $node[ 'body-parser' ].json(\n\t\t\t\t{\n\t\t\t\t\tlimit : this.bodyLimit()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressFiler() {\n\t\t\treturn $node['express'].static(\n\t\t\t\t$node.path.resolve( this.rootPublic() ) , {\n\t\t\t\t\tmaxAge : this.cacheTime()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressDirector() {\n\t\t\treturn $node['serve-index']( this.rootPublic() , { icons : true } )\n\t\t}\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn ( req : any , res : any , next : () => void )=> next()\n\t\t}\n\t\t\n\t\tbodyLimit() {\n\t\t\treturn '1mb'\n\t\t}\n\t\t\n\t\tcacheTime() {\n\t\t\treturn 1000 * 60 * 60 * 24 * 365 * 1000\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 80\n\t\t}\n\t\t\n\t\trootPublic() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_build_server extends $mol_server {\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn ( req : any , res : any , next : () => void )=> {\n\t\t\t\ttry {\n\t\t\t\t\treturn this.generator( req.url ).valueOf() && next()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\tif( req.url.match( /\\.js$/ ) ) {\n\t\t\t\t\t\tres.send( `console.error( ${ JSON.stringify( error.message ) } )` ).end()\n\t\t\t\t\t} else if( req.url.match( /\\.css$/ ) ) {\n\t\t\t\t\t\tconst message = JSON.stringify( error.message.replace( /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g , '' ) )\n\t\t\t\t\t\t\t.replace( /\\\\n/g , '\\\\a' )\n\t\t\t\t\t\t\t.replace( /\\\\t/g , '\\\\9' )\n\t\t\t\t\t\tres.setHeader( 'content-type' , 'text/css' )\n\t\t\t\t\t\tres.send( `body:before{ display: block; font: 1em monospace; white-space: pre-wrap; color: red; content : ${ message } }` ).end()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tbuild() : $mol_build {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\t@ $mol_mem_key({\n\t\t\tlazy : true\n\t\t})\n\t\tgenerator( path : string ) {\n\t\t\tvar matched = path.match( /^((?:\\/\\w+)+)\\/-\\/(\\w+(?:.\\w+)+)$/ )\n\t\t\tif( !matched ) return <$mol_file[]>[]\n\t\t\t\n\t\t\tvar build = this.build()\n\t\t\t\n\t\t\tvar [ path , path , bundle ] = matched\n\t\t\tpath = build.root().resolve( path ).path()\n\t\t\t\n\t\t\treturn build.bundle( { path , bundle } )\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 8080\n\t\t}\n\t\t\n\t}\n\n}\n","declare var process : any\n\nnamespace $ {\n\n\texport function $mol_build_start( paths : string[] ) {\n\t\tvar build = $mol_build.relative( '.' )\n\t\tif( paths.length > 0 ) {\n\t\t\tprocess.argv.slice( 2 ).forEach(\n\t\t\t\t( path : string )=> {\n\t\t\t\t\tpath = build.root().resolve( path ).path()\n\t\t\t\t\tbuild.bundle( { path } ).valueOf()\n\t\t\t\t}\n\t\t\t)\n\t\t} else {\n\t\t\tbuild.server().express()\n\t\t}\n\t}\n\t\n\tsetImmediate(\n\t\t()=> {\n\t\t\t$mol_build_start( process.argv.slice( 2 ) )\n\t\t}\n\t)\n\t\n}\n"]}